image: node:14.15.0

definitions:
  services:
    mongo:
      image: mongo
    postgres:
      image: postgres
      variables:
        POSTGRES_PASSWORD: 'test'
  steps:
    - step: &jest-test
        name: All Tests
        caches:
          - node
        services:
          - mongo
        script:
          - npm run decrypt -- './envs/pipeline.enc' './envs/pipeline.env'
          - npm install
          - npm test
    - step: &lint-test
        name: ESLint
        caches:
          - node
        script:
          - npm install -g eslint
          - eslint $BITBUCKET_CLONE_DIR
    - step: &unit-test
        name: Unit Tests
        caches:
          - node
        script:
          - npm run decrypt -- './envs/pipeline.enc' './envs/pipeline.env'
          - npm install
          - npm run test:unit
    - step: &integration-db-test
        name: Integration test
        services:
          - postgres
        caches:
          - node
        script:
          - npm run decrypt -- './envs/pipeline.enc' './envs/pipeline.env'
          - npm install
          - npm install --only=dev
          - node ./tools/migrator.js init
          - node ./tools/migrator.js up --all
          - node ./tools/migrator.js seed sys -a
          - node ./tools/migrator.js seed dev salesforce
          - node ./tools/migrator.js seed dep users,audit_register
          - npm run test:integration:db
    - step: &api-test
        name: Api test
        services:
          - postgres
        caches:
          - node
        script:
          - npm run decrypt -- './envs/pipeline.enc' './envs/pipeline.env'
          - npm install
          - npm install --only=dev
          - node ./tools/migrator.js init
          - node ./tools/migrator.js up --all
          - node ./tools/migrator.js seed sys -a
          - node ./tools/migrator.js seed dev salesforce
          - node ./tools/migrator.js seed dep users,audit_register
          - npm run test:api
    - step: &db-migration
        name: DB Migration
        caches:
          - node
        script:
          - cd $BITBUCKET_CLONE_DIR && npm install
          - npm install -g knex
          - npm run decrypt -- './envs/pipeline.enc' './envs/pipeline.env'
          - node ./tools/migrator.js init
          - node ./tools/migrator.js up --all
          - node ./tools/migrator.js seed systemData --all
          - node ./tools/migrator.js seed deploymentData --all --but qbo_account_mappings
    - step: &azure-deployment
        name: Azure Deployment
        script:
          - cd $BITBUCKET_CLONE_DIR && npm install
          - npm run api-bundle
          - apt update && apt install zip
          - zip -r $NODE_ENV-$BITBUCKET_BUILD_NUMBER.zip src public .redocly.yaml knexfile.js envs main.js package-lock.json package.json web.config openapi
          - node ./tools/create-azure-env-file.js azure.env.json $NODE_ENV
          - pipe: microsoft/azure-cli-run:1.1.0
            variables:
              AZURE_APP_ID: $AZURE_APP_ID
              AZURE_PASSWORD: $AZURE_APP_SECRET
              AZURE_TENANT_ID: $AZURE_TENANT_ID
              AZURE_RESOURCE_GROUP: $AZURE_RESOURCE_GROUP
              AZURE_APP_NAME: $AZURE_APP_NAME
              CLI_COMMAND: 'az webapp config appsettings set -g $AZURE_RESOURCE_GROUP -n $AZURE_APP_NAME -s $NODE_ENV --settings @azure.env.json'
          - pipe: microsoft/azure-web-apps-deploy:1.0.3
            variables:
              AZURE_APP_ID: $AZURE_APP_ID
              AZURE_PASSWORD: $AZURE_APP_SECRET
              AZURE_TENANT_ID: $AZURE_TENANT_ID
              AZURE_RESOURCE_GROUP: $AZURE_RESOURCE_GROUP
              AZURE_APP_NAME: $AZURE_APP_NAME
              ZIP_FILE: $NODE_ENV-$BITBUCKET_BUILD_NUMBER.zip
              SLOT: $NODE_ENV
        artifacts:
          - '*.zip'
    - step: &full-deployment
        name: Full Deployment to Database and Azure
        caches:
          - node
        script:
          - cd $BITBUCKET_CLONE_DIR && npm install
          - npm install -g knex
          - npm run decrypt -- './envs/$DOT_ENV_FILENAME.enc' './envs/$DOT_ENV_FILENAME.env'
          - node ./tools/migrator.js init
          - node ./tools/migrator.js up --all
          - node ./tools/migrator.js seed systemData --all
          - node ./tools/migrator.js seed deploymentData --all
          - npm run api-bundle
          - apt update && apt install zip
          - zip -r $NODE_ENV-$BITBUCKET_BUILD_NUMBER.zip src public .redocly.yaml knexfile.js envs main.js package-lock.json package.json web.config openapi
          - pipe: microsoft/azure-cli-run:1.1.0
            variables:
              AZURE_APP_ID: $AZURE_APP_ID
              AZURE_PASSWORD: $AZURE_APP_SECRET
              AZURE_TENANT_ID: $AZURE_TENANT_ID
              AZURE_RESOURCE_GROUP: $AZURE_RESOURCE_GROUP
              AZURE_APP_NAME: $AZURE_APP_NAME
              CLI_COMMAND: 'az webapp config appsettings set -g $AZURE_RESOURCE_GROUP -n $AZURE_APP_NAME -s $NODE_ENV --settings @azure.env.json'
          - pipe: microsoft/azure-web-apps-deploy:1.0.3
            variables:
              AZURE_APP_ID: $AZURE_APP_ID
              AZURE_PASSWORD: $AZURE_APP_SECRET
              AZURE_TENANT_ID: $AZURE_TENANT_ID
              AZURE_RESOURCE_GROUP: $AZURE_RESOURCE_GROUP
              AZURE_APP_NAME: $AZURE_APP_NAME
              ZIP_FILE: $NODE_ENV-$BITBUCKET_BUILD_NUMBER.zip
              SLOT: $NODE_ENV
        artifacts:
          - '*.zip'
    - step: &full-deployment-prod
        name: Full Deployment to Database and Azure
        caches:
          - node
        script:
          - cd $BITBUCKET_CLONE_DIR && npm install
          - npm install -g knex
          - npm run decrypt -- './envs/prod.enc' './envs/prod.env'
          - node ./tools/migrator.js init
          - node ./tools/migrator.js up --all
          - node ./tools/migrator.js seed systemData --all
          - node ./tools/migrator.js seed deploymentData --all
          - npm run api-bundle
          - apt update && apt install zip
          - zip -r $NODE_ENV-$BITBUCKET_BUILD_NUMBER.zip src public .redocly.yaml knexfile.js envs main.js package-lock.json package.json web.config openapi
          - pipe: microsoft/azure-cli-run:1.1.0
            variables:
              AZURE_APP_ID: $AZURE_APP_ID
              AZURE_PASSWORD: $AZURE_APP_SECRET
              AZURE_TENANT_ID: $AZURE_TENANT_ID
              AZURE_RESOURCE_GROUP: $AZURE_RESOURCE_GROUP
              AZURE_APP_NAME: $AZURE_APP_NAME
              CLI_COMMAND: 'az webapp config appsettings set -g $AZURE_RESOURCE_GROUP -n $AZURE_APP_NAME --settings @azure.env.json'
          - pipe: microsoft/azure-web-apps-deploy:1.0.3
            variables:
              AZURE_APP_ID: $AZURE_APP_ID
              AZURE_PASSWORD: $AZURE_APP_SECRET
              AZURE_TENANT_ID: $AZURE_TENANT_ID
              AZURE_RESOURCE_GROUP: $AZURE_RESOURCE_GROUP
              AZURE_APP_NAME: $AZURE_APP_NAME
              ZIP_FILE: $NODE_ENV-$BITBUCKET_BUILD_NUMBER.zip
              #DO NOT PUT SLOT IN HERE BECAUSE PIPELINES WILL MESS UP
        artifacts:
          - '*.zip'

pipelines:
  pull-requests:
    '**':
      - step: *unit-test
      - step: *integration-db-test
      - step: *api-test

  branches:
    'dev':
      - step:
          <<: *full-deployment
          deployment: development
    'staging':
      - step:
          <<: *full-deployment
          deployment: staging
    'production':
      - step:
          <<: *full-deployment-prod
          deployment: production
