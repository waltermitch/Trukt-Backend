openapi: 3.0.0
info:
  version: 0.0.2
  title: Trukt
  description: Transportation management system
servers:
  - url: 'https://truktapi-dev.rcgauto.net'
    description: Development server
  - url: 'https://truktapi-staging.rcgauto.net'
    description: Staging server
  - url: 'https://truktapi.rcgauto.net'
    description: Production server
paths:
  /attachments:
    post:
      summary: Add An Attachment
      operationId: createAttachment
      description: Add Attachment to a given job/order
      tags:
        - Attachments
      parameters:
        - in: query
          name: parent
          required: true
          allowEmptyValue: false
          schema:
            $ref: '#/components/schemas/guid'
          description: The guid of the parent object
        - in: query
          name: parentType
          required: true
          allowEmptyValue: false
          description: 'The type of the parent object (i.e job, order)'
          schema:
            enum:
              - jobs
        - in: query
          name: attachmentType
          required: false
          allowEmptyValue: true
          description: 'The type of attachment (i.e. photo, billOfLading, etc)'
          schema:
            enum:
              - vendorInvoice
              - billOfLading
              - proofOfDelivery
              - lumperTicket
              - scaleTicket
              - inGateTicket
              - outGateTicket
              - miscellaneous
              - accessorialAgreement
              - rateConfirmation
              - loadTender
              - invoice
              - customsDocuments
              - invoiceWithPaperwork
              - detentionLoading
              - detentionUnloading
              - palletReceipt
              - spotApproval
              - truckNotUsed
              - exitPass
              - balanceDue
              - packingList
              - photo
        - in: query
          name: visibility
          schema:
            type: array
            items:
              type: string
              enum:
                - carrier
                - client
                - internal
              default:
                - internal
          required: false
          explode: false
          allowEmptyValue: true
          description: 'The visibility of the attachment (i.e. carrier, internal)'
      requestBody:
        content:
          multipart/*:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: Created Attachment
          content:
            application/json: {}
  /attachments/search:
    get:
      summary: Search Attachments
      operationId: searchAttachments
      description: Search For Attachments of a given job/order
      tags:
        - Attachments
      parameters:
        - in: query
          name: parent
          required: true
          allowEmptyValue: false
          schema:
            $ref: '#/components/schemas/guid'
          description: The guid of the parent object
        - in: query
          name: parentType
          required: true
          allowEmptyValue: false
          description: 'The type of the parent object (i.e job, order)'
          schema:
            enum:
              - jobs
        - in: query
          name: attachmentType
          required: false
          allowEmptyValue: true
          description: 'The type of attachment (i.e. photo, billOfLading, etc)'
          schema:
            enum:
              - vendorInvoice
              - billOfLading
              - proofOfDelivery
              - lumperTicket
              - scaleTicket
              - inGateTicket
              - outGateTicket
              - miscellaneous
              - accessorialAgreement
              - rateConfirmation
              - loadTender
              - invoice
              - customsDocuments
              - invoiceWithPaperwork
              - detentionLoading
              - detentionUnloading
              - palletReceipt
              - spotApproval
              - truckNotUsed
              - exitPass
              - balanceDue
              - packingList
              - photo
        - in: query
          name: visibility
          schema:
            type: array
            items:
              type: string
              enum:
                - carrier
                - client
                - internal
              default:
                - internal
          required: false
          explode: false
          allowEmptyValue: true
          description: 'The visibility of the attachment (i.e. carrier, internal)'
      responses:
        '201':
          description: Found Attachments
          content:
            application/json: {}
  '/attachments/{guid}':
    get:
      summary: Get Attachment
      operationId: getAttachment
      description: Get Attachment by guid
      tags:
        - Attachments
      parameters:
        - in: path
          name: guid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: Attachment
          content:
            application/json: {}
    delete:
      summary: Delete Attachment
      operationId: deleteAttachment
      description: Delete Attachment of a given job/order
      tags:
        - Attachments
      parameters:
        - in: path
          name: guid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '204':
          description: Deleted Attachment
    patch:
      summary: Update Attachment
      operationId: updateAttachment
      description: Update Attachment of a given job/order
      tags:
        - Attachments
      parameters:
        - in: path
          name: guid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '204':
          description: updated Attachment
  /edi/204/inbound:
    post:
      summary: Create a load tender
      operationId: createLoadTender
      description: Create a load tender that will eventually be accepted or rejected.
      tags:
        - EDI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - client
                - stops
                - terminals
                - commodities
                - edi
              properties:
                instructions:
                  type: string
                  description: The instructions for the load provided by the client.
                estimatedDistance:
                  type: number
                  description: >-
                    The distance required to travel to complete the full load in
                    miles.
                  nullable: true
                  minimum: 0
                  maximum: 9999999.9
                referenceNumber:
                  type: string
                  maxLength: 64
                  description: >-
                    The external identification number the client uses for this
                    load tender.
                bol:
                  type: string
                  maxLength: 64
                  description: The Bill of Lading reference number for this load.
                bolUrl:
                  type: string
                  maxLength: 1024
                  description: The URL to the Bill of Lading for this load.
                totalCost:
                  description: >-
                    The total cost of the order in USD. This should match the
                    sum of the cost of all of the commodities.
                  type: string
                  format: currency
                client:
                  allOf:
                    - $ref: '#/components/schemas/account'
                    - description: The client/customer that is placing the order.
                consignee:
                  allOf:
                    - $ref: '#/components/schemas/account'
                    - description: The party that is responsible for paying for the order.
                clientContact:
                  allOf:
                    - $ref: '#/components/schemas/Contact'
                    - description: The contact information of the client.
                stops:
                  type: array
                  items:
                    $ref: '#/components/schemas/Stop'
                  minLength: 1
                terminals:
                  type: array
                  items:
                    $ref: '#/components/schemas/Terminal'
                  minLength: 1
                commodities:
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/Commodity'
                      - type: object
                        properties:
                          extraExternalData:
                            description: >-
                              Any information about the commodity that is stored
                              in external systems. This is a free response json
                              field.
                            type: object
                            nullable: true
                          cost:
                            description: The price to ship this commodity in USD.
                            example: '100.00'
                            type: string
                            format: currency
                            minLength: 1
                edi:
                  description: >-
                    EDI data parsed in JSON format. Do not decode/encode as JSON
                    String.
                  type: object
      responses:
        '201':
          description: Created load tender.
          content:
            application/json: {}
  /edi/214/inbound:
    put:
      summary: Update a load tender status
      operationId: updateLoadTenderStatus
      description: |
        Update the status or set appointment of a load tender.
      tags:
        - EDI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - partner
                - reference
                - location
                - status
                - datetime
              properties:
                partner:
                  description: The partner that wishes to update a load tender
                  oneOf:
                    - $ref: '#/components/schemas/SFID'
                    - type: string
                      format: uuid
                reference:
                  description: >
                    The shipment/reference number from the load that was created
                    via EDI 204 load tender
                  type: string
                  maxLength: 64
                commodity:
                  description: >
                    The identifier field from a commodity that was created via
                    EDI 204 load tender
                  type: string
                  maxLength: 255
                location:
                  description: Include the location to update the respective stop
                  type: object
                  properties:
                    city:
                      type: string
                      maxLength: 64
                    state:
                      type: string
                      maxLength: 100
                    country:
                      type: string
                      maxLength: 64
                    latitude:
                      $ref: '#/components/schemas/latitude'
                    longitude:
                      $ref: '#/components/schemas/longitude'
                status:
                  oneOf:
                    - $ref: '#/components/schemas/EDI214StopStatus'
                    - $ref: '#/components/schemas/EDI214Appointment'
                  description: >-
                    Represents the status/appointment update for the load
                    tender.
                  type: object
                  discriminator:
                    propertyName: type
                    mapping:
                      status: '#/components/schemas/EDI214StopStatus'
                      appointment: '#/components/schemas/EDI214Appointment'
                datetime:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Updated Load Tender status.
          content:
            application/json: {}
  /edi/214/outbound:
    get:
      summary: Update a load tender status
      operationId: notifyLoadTenderStatus
      description: >
        This endpoint is designed for development purposes only.  It will
        generate a sample payload for a specific load tender described by query
        parameters.
      tags:
        - EDI
      parameters:
        - name: reference
          schema:
            type: string
          required: true
          allowEmptyValue: false
          description: The reference number of a load tender
          in: query
      responses:
        '200':
          description: Outbound Load Tender Update
          content:
            application/json:
              schema:
                type: object
                required:
                  - partner
                  - reference
                  - location
                  - status
                  - datetime
                properties:
                  order:
                    type: object
                    properties:
                      guid:
                        description: >-
                          The guid of the order in our system that is being
                          updated. may be used to fetch additional information
                        type: string
                        format: uuid
                      number:
                        description: The RCG internal load number
                        type: string
                        pattern: '[A-Z]{2}[0-9]{5}'
                        minLength: 7
                        maxLength: 7
                  partner:
                    allOf:
                      - description: The partner that wishes to update a load tender.
                      - oneOf:
                          - $ref: '#/components/schemas/SFID'
                          - type: string
                            format: uuid
                  reference:
                    description: >
                      The shipment/reference number from the load that was
                      created via EDI 204 load tender
                    type: string
                    maxLength: 64
                  commodity:
                    description: >-
                      An array of commodity identifier field values that have a
                      status update.
                    type: array
                    items:
                      type: string
                      description: >-
                        The identifier field from a commodity that was created
                        via EDI 204 load tender
                      maxLength: 255
                  location:
                    description: The load tender's stop whose status will be updated.
                    type: object
                    properties:
                      sequence:
                        type: integer
                        description: The sequence number of the stop.
                      name:
                        type: string
                        description: >-
                          The name of the Terminal when creating the load
                          tender.
                      city:
                        type: string
                        maxLength: 64
                      state:
                        type: string
                        maxLength: 100
                      country:
                        type: string
                        maxLength: 64
                      latitude:
                        $ref: '#/components/schemas/latitude'
                      longitude:
                        $ref: '#/components/schemas/longitude'
                  status:
                    oneOf:
                      - $ref: '#/components/schemas/EDI214StopStatus'
                      - $ref: '#/components/schemas/EDI214Appointment'
                    description: >-
                      Represents the status/appointment update for the load
                      tender
                    type: object
                    discriminator:
                      propertyName: type
                      mapping:
                        status: '#/components/schemas/EDI214StopStatus'
                        appointment: '#/components/schemas/EDI214Appointment'
                  datetime:
                    type: string
                    format: date-time
                  sla:
                    description: The Service Level Agreement.
                    type: string
                    example: 8 days
                  edi:
                    $ref: '#/components/schemas/edi'
  /edi/990/outbound/accept:
    get:
      summary: Accept Load Tender
      operationId: acceptLoadTender
      description: >
        This endpoint is designed for development purposes only.  It will
        generate a sample payload for a specific load tender described by query
        parameters.
      tags:
        - EDI
      parameters:
        - name: reference
          schema:
            type: string
          required: true
          allowEmptyValue: false
          description: The reference number of a load tender.
          in: query
        - name: partner
          schema:
            $ref: '#/components/schemas/SFID'
          required: true
          allowEmptyValue: false
          description: The partner ID provided when creating a load tender.
          in: query
      responses:
        '200':
          description: Sample outbound 990 accept payload.
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties:
                      guid:
                        allOf:
                          - description: The EDI load tender guid inside of RCG database
                          - $ref: '#/components/schemas/guid'
                      number:
                        description: The RCG internal load number
                        type: string
                        pattern: '[A-Z]{2}[0-9]{5}'
                        minLength: 7
                        maxLength: 7
                  partner:
                    allOf:
                      - description: >
                          The EDI load tender client guid that was used when
                          creating a load tender in our system.
                      - $ref: '#/components/schemas/SFID'
                  reference:
                    description: >
                      The EDI load tender reference number used when creating a
                      load tender in our system.
                    type: string
                  action:
                    allOf:
                      - description: The action to take with the EDI load tender.
                      - $ref: '#/components/schemas/ediActionType'
                  date:
                    type: string
                    format: date-time
                    description: The date the response was generated
                  scac:
                    description: The scac number
                    type: string
                    format: scac
                  edi:
                    $ref: '#/components/schemas/edi'
  /edi/990/outbound/reject:
    get:
      summary: Reject Load Tender
      operationId: rejectLoadTender
      description: >-
        This endpoint is designed for development purposes only.  It will
        generate a sample payload for a specific load tender described by query
        parameters.
      tags:
        - EDI
      parameters:
        - name: reference
          schema:
            type: string
          required: true
          allowEmptyValue: false
          description: The reference number of a load tender
          in: query
        - name: partner
          schema:
            $ref: '#/components/schemas/SFID'
          required: true
          allowEmptyValue: false
          description: The partner ID provided when creating a load tender
          in: query
      responses:
        '200':
          description: Sample outbound 990 reject payload.
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    type: object
                    properties:
                      guid:
                        allOf:
                          - description: The EDI load tender guid inside of RCG database
                          - $ref: '#/components/schemas/guid'
                      number:
                        description: The RCG internal load number
                        type: string
                        pattern: '[A-Z]{2}[0-9]{5}'
                        minLength: 7
                        maxLength: 7
                  partner:
                    allOf:
                      - description: >
                          The EDI load tender client guid that was used when
                          creating a load tender in our system.
                      - $ref: '#/components/schemas/SFID'
                  reference:
                    description: >
                      The EDI load tender reference number used when creating a
                      load tender in our system.
                    type: string
                  action:
                    allOf:
                      - description: The action to take with the EDI load tender.
                      - $ref: '#/components/schemas/ediActionType'
                  reason:
                    description: The reason for rejecting the EDI load tender.
                    type: string
                    maxLength: 60
                  date:
                    type: string
                    format: date-time
                    description: The date the response was generated
                  scac:
                    description: The scac number
                    type: string
                    format: scac
                  edi:
                    $ref: '#/components/schemas/edi'
  /order:
    post:
      summary: Create order
      operationId: createOrder
      description: Create order
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                referenceNumber:
                  $ref: '#/components/schemas/referenceNumber'
                inspectionType:
                  $ref: '#/components/schemas/properties-inspectionType'
                instructions:
                  $ref: '#/components/schemas/instructions'
                clientNotes:
                  $ref: '#/components/schemas/clientNotes'
                estimatedRevenue:
                  $ref: '#/components/schemas/estimatedRevenue'
                estimatedExpense:
                  $ref: '#/components/schemas/estimatedExpense'
                quotedRevenue:
                  $ref: '#/components/schemas/quotedRevenue'
                estimatedDistance:
                  $ref: '#/components/schemas/estimatedDistance'
                isDummy:
                  $ref: '#/components/schemas/isDummy'
                dateExpectedCompleteBy:
                  $ref: '#/components/schemas/dateExpectedCompleteBy'
                bol:
                  $ref: '#/components/schemas/bol'
                bolUrl:
                  $ref: '#/components/schemas/bolUrl'
                client:
                  $ref: '#/components/schemas/client'
                clientContact:
                  $ref: '#/components/schemas/clientContact'
                consignee:
                  $ref: '#/components/schemas/consignee'
                dispatcher:
                  $ref: '#/components/schemas/dispatcher'
                referrer:
                  $ref: '#/components/schemas/referrer'
                salesperson:
                  $ref: '#/components/schemas/salesperson'
                jobs:
                  type: array
                  description: >-
                    All of the jobs that will be worked by vendors for this
                    order.
                  items:
                    allOf:
                      - $ref: '#/components/schemas/Job'
                      - type: object
                        properties:
                          index:
                            description: >-
                              Arbitrary string used for referencing this job in
                              the payload.
                            type: string
                          loadType:
                            type: string
                            enum:
                              - full truck load
                              - partial truck load
                          inspectionType:
                            allOf:
                              - $ref: '#/components/schemas/inspectionType'
                              - description: This field currently has not use.
                          vendor:
                            allOf:
                              - $ref: '#/components/schemas/guidObject'
                              - description: >-
                                  The vendor or carrier responsible for
                                  completing this job.
                          vendorContact:
                            allOf:
                              - $ref: '#/components/schemas/Contact'
                              - description: >-
                                  The vendor or carrier contact that can be
                                  contacted if any questions arise.
                          vendorAgent:
                            allOf:
                              - $ref: '#/components/schemas/Contact'
                              - description: >-
                                  The vendor or carrier employee that will be
                                  completing the job. Usually for carriers this
                                  is the driver.
                          dispatcher:
                            allOf:
                              - $ref: '#/components/schemas/guidObject'
                              - description: >-
                                  The dispatcher who is responsible for managing
                                  this job.
                          stops:
                            type: array
                            items:
                              oneOf:
                                - type: object
                                  properties:
                                    index:
                                      type: string
                                      description: >-
                                        The index field inside of the stops
                                        array in the payload
                                    commodities:
                                      type: array
                                      items:
                                        allOf:
                                          - $ref: '#/components/schemas/indexObject'
                                          - type: object
                                            properties:
                                              lotNumber:
                                                description: >-
                                                  The lot number for this commodity at
                                                  this stop.
                                                type: string
                                  required:
                                    - index
                                - $ref: '#/components/schemas/Stop'
                        required:
                          - index
                          - stops
                expenses:
                  type: array
                  items:
                    $ref: '#/components/schemas/orderExpense'
                stops:
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/indexObject'
                      - $ref: '#/components/schemas/Stop'
                terminals:
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/Terminal'
                      - $ref: '#/components/schemas/indexObject'
                commodities:
                  type: array
                  items:
                    $ref: '#/components/schemas/CommodityInbound'
              required:
                - client
                - stops
                - terminals
                - commodities
      responses:
        '200':
          description: Orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    $ref: '#/components/schemas/guid'
                  number:
                    type: string
                    pattern: '/[A-Z]{2}\d{5}/'
                    example: RC10000
                  instructions:
                    $ref: '#/components/schemas/instructions'
                  status:
                    $ref: '#/components/schemas/orderStatus'
                  distance:
                    type: number
                    description: >-
                      The calculated distance required to travel to complete the
                      full order in miles.
                    nullable: true
                    minimum: 0
                    maximum: 9999999.9
                  isDummy:
                    type: boolean
                    default: false
                    example: false
                  isCompleted:
                    type: boolean
                    default: false
                    example: false
                  estimatedExpense:
                    $ref: '#/components/schemas/estimatedExpense'
                  estimatedRevenue:
                    $ref: '#/components/schemas/estimatedRevenue'
                  quotedRevenue:
                    $ref: '#/components/schemas/quotedRevenue'
                  estimatedIncome:
                    allOf:
                      - $ref: '#/components/schemas/currency'
                      - description: The calculated total estimated income for this order.
                        readOnly: true
                  actualRevenue:
                    allOf:
                      - $ref: '#/components/schemas/currency'
                      - description: The calculated revenue for this order.
                        readOnly: true
                  actualExpense:
                    allOf:
                      - $ref: '#/components/schemas/currency'
                      - description: The calculated expense for this order.
                        readOnly: true
                  actualIncome:
                    allOf:
                      - $ref: '#/components/schemas/currency'
                      - description: The calculated total income for this order.
                        readOnly: true
                  dateExpectedCompleteBy:
                    $ref: '#/components/schemas/dateExpectedCompleteBy'
                  dateCompleted:
                    description: The date that this order was completed
                    type: string
                    format: date-time
                    readOnly: true
                    nullable: true
                  dateCreated:
                    $ref: '#/components/schemas/dateCreated'
                  dateUpdated:
                    $ref: '#/components/schemas/dateUpdated'
                  createdByGuid:
                    $ref: '#/components/schemas/createdByGuid'
                  updatedByGuid:
                    $ref: '#/components/schemas/updatedByGuid'
                  referenceNumber:
                    $ref: '#/components/schemas/referenceNumber'
                  inspectionType:
                    $ref: '#/components/schemas/properties-inspectionType'
                  isTender:
                    description: >-
                      Signals if the order is a tender and is pending approval
                      or confirmation.
                  isStarted:
                    description: Signals if the order has been started by the vendor(s).
                    type: boolean
                    default: false
                    example: false
                  estimatedDistance:
                    $ref: '#/components/schemas/estimatedDistance'
                  bol:
                    $ref: '#/components/schemas/bol'
                  bolUrl:
                    $ref: '#/components/schemas/bolUrl'
                  clientContact:
                    $ref: '#/components/schemas/clientContact'
                  dispatcher:
                    $ref: '#/components/schemas/dispatcher'
                  referrer:
                    $ref: '#/components/schemas/referrer'
                  salesperson:
                    $ref: '#/components/schemas/salesperson'
                  client:
                    allOf:
                      - $ref: '#/components/schemas/client'
                      - $ref: '#/components/schemas/Account_client'
                  consignee:
                    $ref: '#/components/schemas/consignee'
                  jobs:
                    type: array
                    items:
                      type: object
                  expenses:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/orderExpense'
                        - $ref: '#/components/schemas/guidObject'
                  stops:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Stop'
                        - type: object
                          properties:
                            terminal:
                              allOf:
                                - $ref: '#/components/schemas/guidObject'
                                - $ref: '#/components/schemas/Terminal'
                            commodities:
                              $ref: '#/components/schemas/CommodityOutbound'
                  terminals:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/guidObject'
                        - $ref: '#/components/schemas/Terminal'
    patch:
      summary: Update order
      operationId: patchOrder
      description: Update order
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                guid:
                  allOf:
                    - description: Order to update.
                    - $ref: '#/components/schemas/guid'
                referenceNumber:
                  type: string
                  maxLength: 64
                  description: >-
                    The external identification number the client uses for this
                    order.
                  nullable: true
                inspectionType:
                  allOf:
                    - $ref: '#/components/schemas/inspectionType'
                    - description: This field currently has no use.
                instructions:
                  type: string
                  description: The instructions for the order provided by the client.
                clientNotes:
                  $ref: '#/components/schemas/clientNotes'
                estimatedRevenue:
                  type: string
                  format: currency
                  description: The amount owed by the client.
                estimatedExpense:
                  type: string
                  format: currency
                  description: The amount owed to the vendors.
                quotedRevenue:
                  type: string
                  format: currency
                  description: The amount quoted to the client for this order.
                estimatedDistance:
                  type: number
                  description: >-
                    The distance required to travel to complete the full order
                    in miles.
                  nullable: true
                  minimum: 0
                  maximum: 9999999.9
                isDummy:
                  type: boolean
                  description: If the order is a dummy and should not be dispatched.
                dateExpectedCompleteBy:
                  type: string
                  format: date-time
                  description: The date that this order is expected to be completed by.
                bol:
                  type: string
                  maxLength: 64
                  description: The Bill of Lading reference number for this order.
                bolUrl:
                  type: string
                  maxLength: 1024
                  description: The URL to the Bill of Lading for this order.
                client:
                  allOf:
                    - description: The client that placed the order
                    - $ref: '#/components/schemas/account'
                consignee:
                  allOf:
                    - description: The party that is responsible for paying for the order
                    - $ref: '#/components/schemas/account'
                clientContact:
                  description: The contact that works for the client.
                  type: object
                  nullable: true
                  anyOf:
                    - additionalProperties: false
                      properties:
                        guid:
                          $ref: '#/components/schemas/guid'
                        name:
                          type: string
                          minLength: 1
                          maxLength: 121
                        email:
                          $ref: '#/components/schemas/email'
                        phoneNumber:
                          $ref: '#/components/schemas/phoneNumber'
                        mobileNumber:
                          $ref: '#/components/schemas/phoneNumber'
                    - additionalProperties: false
                      properties:
                        guid:
                          $ref: '#/components/schemas/guid'
                dispatcher:
                  allOf:
                    - description: The dispatcher responsible for this order.
                    - $ref: '#/components/schemas/guidObjectNullable'
                referrer:
                  allOf:
                    - description: The account that referred this order to us.
                    - $ref: '#/components/schemas/guidObjectNullable'
                salesperson:
                  allOf:
                    - description: The salesperson responsible for managing this order.
                    - $ref: '#/components/schemas/guidObjectNullable'
                jobs:
                  type: array
                  description: >-
                    All of the jobs that will be worked by vendors for this
                    order.
                  items:
                    allOf:
                      - $ref: '#/components/schemas/Job'
                      - type: object
                        properties:
                          guid:
                            $ref: '#/components/schemas/guid'
                          index:
                            description: >-
                              Arbitrary string used for referencing this job in
                              the payload.
                            type: string
                          loadType:
                            type: string
                            enum:
                              - full truck load
                              - partial truck load
                          inspectionType:
                            allOf:
                              - $ref: '#/components/schemas/inspectionType'
                              - description: This field currently has not use.
                          vendor:
                            allOf:
                              - $ref: '#/components/schemas/guidObjectNullable'
                              - description: >-
                                  The vendor or carrier responsible for
                                  completing this job.
                          vendorContact:
                            allOf:
                              - description: >-
                                  The vendor or carrier contact that can be
                                  contacted if any questions arise.
                              - $ref: '#/components/schemas/guidObjectNullable'
                          vendorAgent:
                            allOf:
                              - description: >-
                                  The vendor or carrier employee that will be
                                  completing the job. Usually for carriers this
                                  is the driver.
                              - $ref: '#/components/schemas/guidObjectNullable'
                          dispatcher:
                            allOf:
                              - $ref: '#/components/schemas/guidObjectNullable'
                              - description: >-
                                  The dispatcher who is responsible for managing
                                  this job.
                          stops:
                            type: array
                            items:
                              type: object
                              properties:
                                index:
                                  type: string
                                  description: >-
                                    The index field inside of the stops array in
                                    the payload
                                commodities:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: '#/components/schemas/indexObject'
                                      - type: object
                                        properties:
                                          lotNumber:
                                            description: >-
                                              The lot number for this commodity at
                                              this stop.
                                            type: string
                              required:
                                - index
                        required:
                          - index
                          - guid
                expenses:
                  type: array
                  items:
                    type: object
                    properties:
                      account:
                        type: string
                        enum:
                          - client
                          - vendor
                          - salesperson
                          - referrer
                          - dispatcher
                      amount:
                        allOf:
                          - $ref: '#/components/schemas/currency'
                          - description: The amount that is owed for this expense.
                            minimum: 0
                      item:
                        description: >-
                          The invoice line item name that this expense
                          references.
                        type: string
                      commodity:
                        description: >-
                          The index field in the commodities array in this
                          payload.
                        type: string
                stops:
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/guidObject'
                      - $ref: '#/components/schemas/indexObject'
                      - anyOf:
                          - type: object
                            properties:
                              primaryContact:
                                anyOf:
                                  - $ref: '#/components/schemas/guidObjectNullable'
                                  - $ref: '#/components/schemas/Contact'
                              alternativeContact:
                                anyOf:
                                  - $ref: '#/components/schemas/guidObjectNullable'
                                  - $ref: '#/components/schemas/Contact'
                          - type: object
                            properties:
                              guid:
                                $ref: '#/components/schemas/guid'
                              index:
                                description: >
                                  A unique arbitrary string that will be used to
                                  reference this stop record inside of other
                                  objects.
                                type: string
                                nullable: true
                              sequence:
                                type: integer
                                description: >-
                                  The order in which the stops need to be
                                  visited. This number should be assigned in
                                  increasing order. Magnitude is arbitrary.
                                nullable: false
                              stopType:
                                $ref: '#/components/schemas/stopType'
                              notes:
                                description: >-
                                  Used to convey any instructions about the
                                  stops.
                                type: string
                                nullable: true
                              dateRequestedStart:
                                description: >
                                  This date is requested by the customer. The
                                  earliest date this stop should be worked.
                                type: string
                                format: date-time
                                example: '2021-09-09T13:45:45.000Z'
                                nullable: true
                              dateRequestedEnd:
                                description: >
                                  This date is requested by the customer. The
                                  latest date this stop should be worked.
                                type: string
                                format: date-time
                                example: '2021-09-09T13:45:45.000Z'
                                nullable: true
                              dateRequestedType:
                                description: >-
                                  Defines the type of requested date the
                                  customer requested.
                                $ref: '#/components/schemas/stopDateType'
                              dateEstimatedStart:
                                description: >
                                  This date is submitted by the carrier/vendor.
                                  The earliest date this stop could be worked.
                                type: string
                                format: date-time
                                example: '2021-09-09T13:45:45.000Z'
                                nullable: true
                              dateEstimatedEnd:
                                description: >
                                  This date is submitted by the carrier/vendor.
                                  The latest date this stop could be worked.
                                type: string
                                format: date-time
                                example: '2021-09-09T13:45:45.000Z'
                                nullable: true
                              dateEstimatedType:
                                description: >-
                                  Defines the type of estimated date the
                                  carrier/vendor submitted.
                                $ref: '#/components/schemas/stopDateType'
                              dateScheduledStart:
                                description: >
                                  This date is submitted by the dispatcher. The
                                  earliest date this stop will be worked
                                type: string
                                format: date-time
                                example: '2021-09-09T13:45:45.000Z'
                                nullable: true
                              dateScheduledEnd:
                                description: >
                                  This date is submitted by the dispatcher. The
                                  latest date this stop will be worked
                                type: string
                                format: date-time
                                example: '2021-09-09T13:45:45.000Z'
                                nullable: true
                              dateScheduledType:
                                description: >-
                                  Defined the type of scheduled date the
                                  dispatcher submitted.
                                $ref: '#/components/schemas/stopDateType'
                              primaryContact:
                                $ref: '#/components/schemas/Contact'
                              alternativeContact:
                                $ref: '#/components/schemas/Contact'
                              terminal:
                                type: string
                                description: >-
                                  The value of the index field from a Terminal
                                  in this payload.
                                nullable: false
                              commodities:
                                type: array
                                minLength: 1
                                items:
                                  type: object
                                  properties:
                                    index:
                                      type: string
                                      description: >-
                                        The value of the index field from a
                                        Commodity in this payload.
                                    lotNumber:
                                      type: string
                                      description: >-
                                        The lot number for this commodity at
                                        this stop.
                                  required:
                                    - index
                terminals:
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/Terminal'
                      - $ref: '#/components/schemas/indexObject'
                      - type: object
                        properties:
                          guid:
                            $ref: '#/components/schemas/guid'
                      - type: object
                        properties:
                          locationType:
                            $ref: '#/components/schemas/terminalLocationType'
                        required:
                          - street1
                          - city
                          - state
                          - zipCode
                          - country
                commodities:
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/indexObject'
                      - $ref: '#/components/schemas/CommodityUpdate'
              required:
                - guid
      responses:
        '200':
          description: Orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    $ref: '#/components/schemas/guid'
                  number:
                    type: string
                    pattern: '/[A-Z]{2}\d{5}/'
                    example: RC10000
                  instructions:
                    $ref: '#/components/schemas/instructions'
                  status:
                    $ref: '#/components/schemas/orderStatus'
                  distance:
                    type: number
                    description: >-
                      The calculated distance required to travel to complete the
                      full order in miles.
                    nullable: true
                    minimum: 0
                    maximum: 9999999.9
                  isDummy:
                    type: boolean
                    default: false
                    example: false
                  isCompleted:
                    type: boolean
                    default: false
                    example: false
                  estimatedExpense:
                    $ref: '#/components/schemas/properties-estimatedExpense'
                  estimatedRevenue:
                    $ref: '#/components/schemas/estimatedRevenue'
                  quotedRevenue:
                    $ref: '#/components/schemas/properties-quotedRevenue'
                  estimatedIncome:
                    allOf:
                      - $ref: '#/components/schemas/currency'
                      - description: The calculated total estimated income for this order.
                        readOnly: true
                  actualRevenue:
                    allOf:
                      - $ref: '#/components/schemas/currency'
                      - description: The calculated revenue for this order.
                        readOnly: true
                  actualExpense:
                    allOf:
                      - $ref: '#/components/schemas/currency'
                      - description: The calculated expense for this order.
                        readOnly: true
                  actualIncome:
                    allOf:
                      - $ref: '#/components/schemas/currency'
                      - description: The calculated total income for this order.
                        readOnly: true
                  dateExpectedCompleteBy:
                    $ref: '#/components/schemas/dateExpectedCompleteBy'
                  dateCompleted:
                    description: The date that this order was completed
                    type: string
                    format: date-time
                    readOnly: true
                    nullable: true
                  dateCreated:
                    $ref: '#/components/schemas/dateCreated'
                  dateUpdated:
                    $ref: '#/components/schemas/dateUpdated'
                  createdByGuid:
                    $ref: '#/components/schemas/createdByGuid'
                  updatedByGuid:
                    $ref: '#/components/schemas/updatedByGuid'
                  referenceNumber:
                    $ref: '#/components/schemas/properties-referenceNumber'
                  inspectionType:
                    $ref: '#/components/schemas/properties-inspectionType'
                  isTender:
                    description: >-
                      Signals if the order is a tender and is pending approval
                      or confirmation.
                  isStarted:
                    description: Signals if the order has been started by the vendor(s).
                    type: boolean
                    default: false
                    example: false
                  estimatedDistance:
                    $ref: '#/components/schemas/estimatedDistance'
                  bol:
                    $ref: '#/components/schemas/bol'
                  bolUrl:
                    $ref: '#/components/schemas/bolUrl'
                  clientContact:
                    $ref: '#/components/schemas/properties-clientContact'
                  dispatcher:
                    $ref: '#/components/schemas/properties-dispatcher'
                  referrer:
                    $ref: '#/components/schemas/properties-referrer'
                  salesperson:
                    $ref: '#/components/schemas/properties-salesperson'
                  client:
                    allOf:
                      - $ref: '#/components/schemas/properties-client'
                      - $ref: '#/components/schemas/Account_client'
                  consignee:
                    $ref: '#/components/schemas/properties-consignee'
                  jobs:
                    type: array
                    items:
                      type: object
                  expenses:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/orderExpense'
                        - $ref: '#/components/schemas/guidObject'
                  stops:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Stop'
                        - type: object
                          properties:
                            terminal:
                              allOf:
                                - $ref: '#/components/schemas/guidObject'
                                - $ref: '#/components/schemas/Terminal'
                            commodities:
                              $ref: '#/components/schemas/CommodityOutbound'
                  terminals:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/guidObject'
                        - $ref: '#/components/schemas/Terminal'
  /order/getorders:
    post:
      summary: Search orders
      operationId: getOrders
      description: Search all orders
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  $ref: '#/components/schemas/page'
                rowCount:
                  $ref: '#/components/schemas/rowCount'
                filters:
                  description: Request filters to apply
                  type: object
                  properties:
                    pickup:
                      description: Coordinates on which to search for order pickups
                      type: array
                      items:
                        type: object
                        properties:
                          longitude:
                            $ref: '#/components/schemas/longitude'
                          latitude:
                            $ref: '#/components/schemas/latitude'
                          radius:
                            description: Search maximun radius for coordinates
                            type: integer
                            default: 1
                        required:
                          - longitude
                          - latitude
                    delivery:
                      description: Coordinates on which to search for delivery pickups
                      type: array
                      items:
                        type: object
                        properties:
                          longitude:
                            $ref: '#/components/schemas/longitude'
                          latitude:
                            $ref: '#/components/schemas/latitude'
                          radius:
                            description: Search maximun radius for coordinates
                            type: integer
                            default: 1
                        required:
                          - longitude
                          - latitude
                    status:
                      description: Filter for order status
                      type: array
                      items:
                        type: string
                        example: new
                    customer:
                      description: Filter for order customer guid
                      type: array
                      items:
                        $ref: '#/components/schemas/guid'
                    carrier:
                      description: Filter for order carrier guid
                      type: array
                      items:
                        $ref: '#/components/schemas/guid'
                    dispatcher:
                      description: Filter for order dispatcher guid
                      type: array
                      items:
                        $ref: '#/components/schemas/guid'
                    salesperson:
                      description: Filter for order salesperson guid
                      type: array
                      items:
                        $ref: '#/components/schemas/guid'
                    dates:
                      description: Filter for status in a specific date
                      type: array
                      items:
                        anyOf:
                          - type: object
                            properties:
                              status:
                                description: Order status
                                type: number
                                example: 1
                              date:
                                $ref: '#/components/schemas/dateTime'
                              comparison:
                                description: Type of restriction in the date search
                                type: string
                                enum:
                                  - equal
                                  - less
                                  - greater
                                  - less or equal
                                  - greater or equal
                                  - different
                                default: equal
                            required:
                              - status
                              - date
                          - type: object
                            properties:
                              status:
                                description: Order status
                                type: number
                                example: 1
                              date1:
                                $ref: '#/components/schemas/dateTime'
                              date2:
                                $ref: '#/components/schemas/dateTime'
                              comparison:
                                description: Type of restriction in the date search
                                type: string
                                enum:
                                  - between
                            required:
                              - status
                              - date1
                              - date2
                              - comparison
                    isTender:
                      description: Filter to select only orders that are marked as tender
                      type: boolean
                    jobCategory:
                      description: >-
                        Filter to select jobs that have one of the categories
                        selected
                      type: array
                      items:
                        type: string
                      minItems: 1
                sort:
                  description: Sort results by field provided
                  type: object
                  properties:
                    field:
                      type: string
                      enum:
                        - status
                        - number
                        - dateCreated
                        - actualRevenue
                        - actualExpense
                        - estimatedExpense
                        - estimatedRevenue
                    order:
                      description: Sorting order
                      type: string
                      enum:
                        - asc
                        - desc
                      default: asc
                  required:
                    - field
                globalSearch:
                  description: Search for orders that match the provided text
                  type: object
                  properties:
                    query:
                      type: string
                  required:
                    - query
      responses:
        '200':
          description: Orders
          content:
            application/json: {}
  '/order/{guid}':
    get:
      summary: Get order by guid
      operationId: getOrder
      description: Get order by guid
      tags:
        - Order
      parameters:
        - in: path
          name: guid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  '/order/find_by_vin/{vin}':
    get:
      summary: Find By VIN
      operationId: findByVin
      description: Find All Orders By VIN
      tags:
        - Order
      parameters:
        - in: path
          name: vin
          schema:
            type: string
          required: true
      responses:
        '200':
          description: order
          content:
            application/json: {}
  '/order/{orderGuid}/tender/accept':
    put:
      summary: Accept load Tenders
      operationId: acceptOrderbyGuid
      description: Accept Tender by order GUID
      tags:
        - Order
      parameters:
        - in: path
          name: orderGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: Tender
          content:
            application/json: {}
        '400':
          description: Tender
          content:
            application/json:
              schema:
                type: string
                example: Order Already Rejected
        '404':
          description: Tender
          content:
            application/json:
              schema:
                type: string
                example: Order doesn't exist
  '/order/{orderGuid}/tender/reject':
    put:
      summary: Reject load Tenders
      operationId: rejectOrderbyGuid
      description: Reject Tender by order GUID
      tags:
        - Order
      parameters:
        - in: path
          name: orderGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  example: Reason for declining Tender
              required:
                - reason
      responses:
        '200':
          description: Tender
          content:
            application/json: {}
        '400':
          description: Tender
          content:
            application/json:
              schema:
                type: string
                example: Order Already Rejected
        '404':
          description: Tender
          content:
            application/json:
              schema:
                type: string
                example: Order doesn't exist
  '/order/{orderGuid}/notes':
    get:
      summary: Get Order Notes by Order guid
      operationId: getAllNotes
      description: Get Order Notes By Order guid
      tags:
        - Order
        - Notes
      parameters:
        - in: path
          name: orderGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: Notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
        '404':
          description: Order Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Order Not Found
  '/order/{orderGuid}/notes/all':
    get:
      summary: Get All Notes by Order guid
      operationId: getOrderNotes
      description: Get All Notes By Order guid
      tags:
        - Order
        - Notes
      parameters:
        - in: path
          name: orderGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: Notes
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    type: array
                    items:
                      $ref: '#/components/schemas/Note'
                  jobs:
                    type: object
                    properties:
                      jobGuid:
                        type: array
                        items:
                          $ref: '#/components/schemas/Note'
        '404':
          description: Order Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Order Not Found
  '/order/{orderGuid}/clientNote':
    put:
      summary: Update Client Note
      operationId: updateClientNote
      description: Updates the note on the order that is shared with the Client
      tags:
        - Order
      parameters:
        - in: path
          name: orderGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                note:
                  type: string
                  maxLength: 3000
                  nullable: true
                  description: >-
                    The note text that is to be stored on the order and shared
                    with the client
                  example: Your order has been shipped and is on its way
      responses:
        '202':
          description: Orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  clientNotes:
                    type: object
                    properties:
                      note:
                        type: string
                        example: Your order has been shipped and is on its way
                      updatedByGuid:
                        $ref: '#/components/schemas/guid'
                      dateUpdated:
                        $ref: '#/components/schemas/dateUpdated'
        '404':
          description: Orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Order not found
  '/job/{jobGuid}/notes':
    get:
      summary: Get Job Notes by Job guid
      operationId: getJobNotes
      description: Get Job Notes By Job guid
      tags:
        - Job
        - Notes
      parameters:
        - in: path
          name: jobGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: Notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
        '404':
          description: Job Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Job Not Found
  /picklist/options:
    get:
      summary: Get picklist options
      operationId: getPicklist
      description: Get all picklist options
      tags:
        - Picklist
      responses:
        '200':
          description: picklist
          content:
            application/json: {}
  '/statusmanager/{guid}':
    get:
      summary: Get status log by order guid
      operationId: getStatusLog
      description: Get status log by order guid
      tags:
        - Statusmanager
      parameters:
        - in: path
          name: guid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
        - in: query
          name: pg
          schema:
            $ref: '#/components/schemas/page'
        - in: query
          name: rc
          schema:
            $ref: '#/components/schemas/rowCount'
      responses:
        '200':
          description: status log
          content:
            application/json: {}
  '/statusmanager/{guid}/{jobGuid}':
    get:
      summary: Get status log by order guid and job guid
      operationId: getStatusLogByJob
      description: Get status log by order guid and job guid
      tags:
        - Statusmanager
      parameters:
        - in: path
          name: guid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
        - in: path
          name: jobGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
        - in: query
          name: pg
          schema:
            $ref: '#/components/schemas/page'
        - in: query
          name: rc
          schema:
            $ref: '#/components/schemas/rowCount'
      responses:
        '200':
          description: status logs
          content:
            application/json: {}
  /terminal:
    get:
      summary: Get list of Terminals
      operationId: searchTerminals
      description: Searches for Terminals given the specified query parameters.
      tags:
        - Terminals
      parameters:
        - in: query
          name: pg
          schema:
            description: |
              For pagination purposes, page number to return, zero indexed.
            type: integer
            minimum: 0
            default: 0
            example: 123
        - in: query
          name: rc
          schema:
            description: |
              For pagination purposes, number of entries to include per page.
            type: integer
            minimum: 1
            default: 10
            example: 100
        - in: query
          name: name
          schema:
            description: >
              Search by the name of the Terminal.  The value will be searched in
              the entire name string of the Terminal.
            type: string
        - in: query
          name: address
          schema:
            description: >
              Search by the street address of the Terminal. The value will be
              searched in the entire street address string of the Terminal.
            type: string
        - in: query
          name: city
          schema:
            description: >
              Search by the city name of the Terminal. The value will be
              searched in the entire city name string of the Terminal.
            type: string
        - in: query
          name: zip
          schema:
            description: >
              Search by the zip code of the Terminal. The value will be searched
              in the entire zip code string of the Terminal.
            type: string
        - in: query
          name: state
          schema:
            description: >
              Search by the state name of the Terminal. The value will be
              searched in the entire state name string of the Terminal.
            type: string
        - in: query
          name: country
          schema:
            description: >
              Search by the country name of the Terminal. The value will be
              searched in the entire country name string of the Terminal.
            type: string
        - in: query
          name: lat
          schema:
            type: number
            format: float
            minimum: -90
            maximum: 90
            example: 34.324135
            description: >
              Search by the latitude of the Terminal. Results will only include
              Terminals with an exact match of the latitude value.
        - in: query
          name: long
          schema:
            type: number
            format: float
            minimum: -180
            maximum: 180
            example: 134.324135
            description: >
              Search by the longitude of the Terminal. Results will only include
              Terminals with an exact match of the longitude value.
        - in: query
          name: search
          schema:
            type: string
            description: >
              Searches the name, street address, city name, state name, country
              name, and zip code of the Terminal. The value will search in the
              entire keyword string value of the Terminal. Results will be more
              constrained when paired with other search keywords.
      responses:
        '200':
          description: terminals
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/guidObject'
                    - $ref: '#/components/schemas/Terminal'
                    - type: object
                      properties:
                        locationType:
                          type: string
                          enum:
                            - dealer
                            - private
                            - auction
                            - repo yard
                            - port
                            - business
                        primaryContact:
                          $ref: '#/components/schemas/Contact'
                        alternativeContact:
                          $ref: '#/components/schemas/Contact'
                        contacts:
                          type: array
                          items:
                            $ref: '#/components/schemas/Contact'
  '/terminal/{terminalGuid}':
    get:
      summary: Get terminal by guid
      operationId: getTerminals
      description: Get terminal by guid
      tags:
        - Terminals
      parameters:
        - in: path
          name: terminalGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: terminals
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/guidObject'
                  - $ref: '#/components/schemas/Terminal'
                  - type: object
                    properties:
                      locationType:
                        type: string
                        enum:
                          - dealer
                          - private
                          - auction
                          - repo yard
                          - port
                          - business
                      primaryContact:
                        $ref: '#/components/schemas/Contact'
                      alternativeContact:
                        $ref: '#/components/schemas/Contact'
                      contacts:
                        type: array
                        items:
                          $ref: '#/components/schemas/Contact'
  '/variables/{name}':
    get:
      summary: Get variable by name
      operationId: getVariable
      description: Get variable by name
      tags:
        - Variable
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
      responses:
        '200':
          description: variable
          content:
            application/json: {}
  /variable:
    post:
      summary: Create variable
      operationId: postVariable
      description: Create variable
      tags:
        - Variable
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: string
              required:
                - name
                - value
      responses:
        '200':
          description: variable
          content:
            application/json: {}
  /pubsub/token:
    get:
      summary: Get pubsub credentials
      operationId: getPubsub
      description: Get pubsub credentials
      tags:
        - Pubsub
      responses:
        '200':
          description: pubsub
          content:
            application/json: {}
  '/loadboard/{jobId}':
    put:
      summary: Post job
      operationId: putLoadboard
      description: Post job
      tags:
        - Loadboard
      parameters:
        - in: path
          name: jobId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                posts:
                  description: List of loadboards to post on
                  type: array
                  items:
                    type: object
                    properties:
                      loadboard:
                        description: Name of the loadboard
                        type: string
                        enum:
                          - SUPERDISPATCH
                          - SHIPCARS
                          - CENTRALDISPATCH
                          - CARDELIVERYNETWORK
                          - TRUCKSTOP
                          - DAT
                      loadboardInstructions:
                        description: Instructions to publish
                        type: string
                        maxLength: 60
                    required:
                      - loadboard
      responses:
        '204':
          description: loadboards
          content:
            application/json: {}
    get:
      summary: Get loadboard by jobId
      operationId: getLoadboard
      description: Get loadboard by jobId
      tags:
        - Loadboard
      parameters:
        - in: path
          name: jobId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: loadboards
          content:
            application/json: {}
    delete:
      summary: Un-post loadboard
      operationId: unpostLoadboardPost
      description: Remove a posting from the loadboard
      tags:
        - Loadboard
      parameters:
        - in: path
          name: jobId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                posts:
                  description: List of loadboards to un-post from
                  type: array
                  items:
                    type: object
                    properties:
                      loadboard:
                        description: Name of the loadboard
                        type: string
                        enum:
                          - SUPERDISPATCH
                          - SHIPCARS
                          - CENTRALDISPATCH
                          - CARDELIVERYNETWORK
                          - TRUCKSTOP
                          - DAT
                    required:
                      - loadboard
      responses:
        '204':
          description: loadboards
          content:
            application/json: {}
    post:
      summary: Create job post
      operationId: postLoadboard
      description: Create job post
      tags:
        - Loadboard
      parameters:
        - in: path
          name: jobId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                posts:
                  description: List of loadboard to create
                  type: array
                  items:
                    type: object
                    properties:
                      loadboard:
                        description: Name of the loadboard
                        type: string
                    required:
                      - loadboard
      responses:
        '200':
          description: loadboards
          content:
            application/json: {}
  '/loadboard/{jobId}/dispatch':
    post:
      summary: Dispatch Job
      operationId: postLoadboardDispatch
      description: Dispatch job internally or to loadboard
      tags:
        - Loadboard
      parameters:
        - in: path
          name: jobId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                loadboard:
                  description: loadboard to dispatch to
                  type: string
                  enum:
                    - SUPERDISPATCH
                    - SHIPCARS
                carrier:
                  type: object
                  description: carrier to dispatch to
                  properties:
                    guid:
                      description: guid or salesforce id of carrier
                      type: string
                      example: 5003000000D8cuI or 61bf88c9-ff63-4f8d-a184-0e9e11bb2408
                  required:
                    - guid
                driver:
                  type: object
                  description: driver assigned to transport the load
                  properties:
                    guid:
                      description: guid or salesforce id of driver
                      type: string
                      example: 5003000000D8cuI or 61bf88c9-ff63-4f8d-a184-0e9e11bb2408
                    name:
                      description: name of driver contact
                      type: string
                      example: Brad Marinov
                    email:
                      description: email of driver contact
                      type: string
                      example: bmarinov@rcglogistics.com
                    phoneNumber:
                      description: phone number of driver contact
                      type: string
                      example: (916) 999-1234
                pickup:
                  type: object
                  description: >-
                    the date type and the possible start and end dates of the
                    pickup
                  properties:
                    dateType:
                      $ref: '#/components/schemas/stopDateType'
                    startDate:
                      $ref: '#/components/schemas/dateTime'
                      description: the earliest date time the load can be picked up
                    endDate:
                      $ref: '#/components/schemas/dateTime'
                      description: the latest date time the load can be picked up
                  required:
                    - dateType
                    - startDate
                delivery:
                  type: object
                  description: >-
                    the date type and the possible start and end dates of the
                    pickup
                  properties:
                    dateType:
                      $ref: '#/components/schemas/stopDateType'
                    startDate:
                      $ref: '#/components/schemas/dateTime'
                      description: the earliest date time the load can be delivered
                    endDate:
                      $ref: '#/components/schemas/dateTime'
                      description: the latest date time the load can be delivered
                  required:
                    - dateType
                    - startDate
                paymentTerm:
                  type: number
                  description: payment term id used for paying carrier
                paymentMethod:
                  type: number
                  description: payment method id used for paying carrier
                price:
                  type: number
                  description: >-
                    new amount owed to the carrier for transporting, will evenly
                    split price across all commodities
                  example: 1234.56
              required:
                - carrier
                - driver
                - pickup
                - delivery
                - paymentTerm
                - paymentMethod
      responses:
        '200':
          description: loadboards
          content:
            application/json: {}
    put:
      summary: Undispatch job
      operationId: putLoadboardDispatch
      description: Undispatches a load from a carrier
      tags:
        - Loadboard
      parameters:
        - in: path
          name: jobId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: loadboards
          content:
            application/json: {}
  '/invoice/{invoiceId}':
    get:
      summary: Get invoice by invoiceId
      operationId: getInvoice
      description: Get invoice by invoiceId
      tags:
        - Invoice
      parameters:
        - in: path
          name: invoiceId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: invoice
          content:
            application/json: {}
        '404':
          description: Invoice not found
          content:
            application/json: {}
  /invoice:
    post:
      summary: Invoice Orders
      operationId: invoiceOrders
      description: Invoices Orders
      tags:
        - Invoice
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: List of Order guids
              properties:
                orders:
                  type: array
                  items:
                    description: Order guid
                    $ref: '#/components/schemas/guid'
                  minItems: 1
              required:
                - orders
      responses:
        '200':
          description: invoices
          content:
            application/json: {}
  /index/order/number:
    get:
      summary: Get next order index number
      operationId: getOrderIndex
      description: Get next order index number
      tags:
        - Index
        - Order
      responses:
        '200':
          description: index
          content:
            application/json: {}
  /index/job/number:
    get:
      summary: Get next job index number
      operationId: getJobIndex
      description: Get next job index number
      tags:
        - Index
        - Job
      parameters:
        - in: query
          name: order
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: job number
          content:
            application/json: {}
  '/expense/{expenseId}':
    get:
      summary: Get Expense by guid
      operationId: getExpense
      description: Get Expense
      tags:
        - Expense
      parameters:
        - in: path
          name: expenseId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: expense
          content:
            application/json: {}
    patch:
      summary: Update Expense
      operationId: patchExpenseParam
      description: Update Expense
      tags:
        - Expense
      parameters:
        - in: path
          name: expenseId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/expense'
      responses:
        '200':
          description: Expense
          content:
            application/json: {}
    delete:
      summary: Delete Expense by guid
      operationId: deleteExpense
      description: Delete Expense
      tags:
        - Expense
      parameters:
        - in: path
          name: expenseId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '204':
          description: Expense deleted
  /expense:
    post:
      summary: Create Expense
      operationId: postExpense
      description: Create Expense
      tags:
        - Expense
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: List Of Expenses
              items:
                description: Expense
                $ref: '#/components/schemas/expense'
                minItems: 1
      responses:
        '200':
          description: invocies
          content:
            application/json: {}
    patch:
      summary: Update Expense
      operationId: patchExpense
      description: Update Expense
      tags:
        - Expense
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/expense'
      responses:
        '200':
          description: expense
          content:
            application/json: {}
  /expense/search:
    get:
      summary: Search Expenses
      operationId: searchExpense
      description: Search Expenses related to Order
      tags:
        - Expense
      parameters:
        - in: query
          name: order
          schema:
            type: string
            format: uuid
          required: true
      responses:
        '200':
          description: expense
          content:
            application/json: {}
  '/bill/{billId}':
    get:
      summary: Get bill by guid
      operationId: getBill
      description: Get bill by guid
      tags:
        - Bill
      parameters:
        - in: path
          name: billId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: Bill
          content:
            application/json: {}
  /bill:
    post:
      summary: Bill Jobs
      operationId: billJobs
      description: Bills Jobs
      tags:
        - Invoice
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: List of Job guids
              properties:
                orders:
                  type: array
                  items:
                    description: Job guid
                    $ref: '#/components/schemas/guid'
                  minItems: 1
              required:
                - jobs
      responses:
        '200':
          description: bills
          content:
            application/json: {}
  '/account/{accountType}':
    get:
      summary: Get account by type
      operationId: getAccountByType
      description: Get account by type
      tags:
        - Account
      parameters:
        - in: path
          name: accountType
          schema:
            $ref: '#/components/schemas/accountType'
          required: true
        - in: query
          name: pg
          schema:
            $ref: '#/components/schemas/page'
        - in: query
          name: rc
          schema:
            $ref: '#/components/schemas/rowCount'
        - in: query
          name: search
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Account
          content:
            application/json: {}
  '/account/{accountType}/{accountId}':
    get:
      summary: Get account by id and type
      operationId: getAccountById
      description: Get account by id and type
      tags:
        - Account
      parameters:
        - in: path
          name: accountType
          schema:
            $ref: '#/components/schemas/accountType'
          required: true
        - in: path
          name: accountId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: Account
          content:
            application/json: {}
  '/loadboard/requests/job/{jobGuid}':
    get:
      summary: Get requests by jobGuid
      operationId: getLoadboardRequests
      description: Get loadboard postings request by job GUID
      tags:
        - Loadboard
      parameters:
        - in: path
          name: jobGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: requests
          content:
            application/json:
              schema:
                type: array
                description: Array of request that exist
                items:
                  $ref: '#/components/schemas/mainResponsePayload'
        '404':
          description: request do not exist
  /loadboard/requests/create:
    post:
      summary: Create Loadboard Request
      operationId: createLoadboardRequest
      description: Create loaboard request from incoming payload
      tags:
        - Loadboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postRequestPayload'
      responses:
        '200':
          description: Request has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mainResponsePayload'
        '404':
          description: Posting doesn't exist
          content:
            application/json:
              schema:
                type: string
                example: Posting doesn't exist
  /loadboard/requests/cancel:
    post:
      summary: Cancel Loadboard Request
      operationId: cancelLoadboardRequest
      description: Cancel loaboard request from incoming payload
      tags:
        - Loadboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postRequestPayload'
      responses:
        '200':
          description: Request has been canceled
          content:
            application/json:
              schema:
                type: string
                example: Payload Canceled
        '404':
          description: Posting doesn't exist
          content:
            application/json:
              schema:
                type: string
                example: Posting doesn't exist
  '/loadboard/requests/{requestGuid}/accept':
    put:
      summary: Accept Loadboard Request
      operationId: acceptLoadboardRequest
      description: Accept loaboard request by requestGuid
      tags:
        - Loadboard
      parameters:
        - in: path
          name: requestGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: Request has been accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mainResponsePayload'
        '404':
          description: Unable to accept request or missing request GUID
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 404
                  data:
                    type: object
                    properties:
                      detail:
                        type: string
                        example: Not Found
  '/loadboard/requests/{requestGuid}/decline':
    put:
      summary: Decline Loadboard Request
      operationId: declineLoadboardRequest
      description: Decline loaboard request by requestGuid
      tags:
        - Loadboard
      parameters:
        - in: path
          name: requestGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: Request has been decline
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mainResponsePayload'
        '404':
          description: Unable to accpet request or missing request GUID
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 404
                  data:
                    type: object
                    properties:
                      detail:
                        type: string
                        example: Not Found
  '/note/{object}/{objectGuid}':
    post:
      summary: Create Internal and external notes
      operationId: createNotes
      description: Create internal and external notes
      tags:
        - Notes
      parameters:
        - in: path
          name: object
          schema:
            $ref: '#/components/schemas/noteObject'
          required: true
        - in: path
          name: objectGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'This is a useless field, so fill it up as you wish.'
                body:
                  description: Note for internal use only.
                  type: string
                  maxLength: 3000
                type:
                  type: string
                  enum:
                    - lead
                    - flag
                    - update
                  description: types of notes that internal notes store
                  example: lead
              required:
                - body
                - type
      responses:
        '200':
          description: Notes have been created
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    $ref: '#/components/schemas/title'
                  body:
                    $ref: '#/components/schemas/body'
                  type:
                    $ref: '#/components/schemas/type'
                  createdByGuid:
                    $ref: '#/components/schemas/createdByGuid'
                  job:
                    type: object
                    properties:
                      guid:
                        $ref: '#/components/schemas/guid'
                  guid:
                    $ref: '#/components/schemas/guid'
        '400':
          description: Unable to create notes
          content:
            application/json:
              schema:
                type: string
                example: Some Error for DB
  '/note/{noteGuid}':
    put:
      summary: Update notes
      operationId: updateNotes
      description: Update internal and external notes
      tags:
        - Notes
      parameters:
        - in: path
          name: noteGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'This is a useless field, so fill it up as you wish.'
                body:
                  description: Note for external use only.
                  type: string
                  maxLength: 3000
                type:
                  type: string
                  enum:
                    - lead
                    - flag
                    - update
                  description: types of notes that internal notes store
                  example: lead
              required:
                - body
                - type
      responses:
        '204':
          description: Notes have been updated
          content:
            application/json: {}
        '400':
          description: Failed to update data note with input values
          content:
            application/json: {}
        '404':
          description: Note does not exist
          content:
            application/json:
              schema:
                type: string
                example: Note does not exist
    delete:
      summary: Delete notes
      operationId: deleteNotes
      description: Delete external or internal notes
      tags:
        - Notes
      parameters:
        - in: path
          name: noteGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '204':
          description: Notes have been deleted
          content:
            application/json: {}
        '404':
          description: Note does not exist
          content:
            application/json:
              schema:
                type: string
                example: Note does not exist
components:
  schemas:
    guid:
      type: string
      format: uuid
      pattern: '^[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$'
      example: 00000000-0000-0000-0000-000000000000
    Attachment:
      type: object
      properties:
        type:
          description: 'The type of attachment (i.e. photo, billOfLading, etc)'
          enum:
            - vendorInvoice
            - billOfLading
            - proofOfDelivery
            - lumperTicket
            - scaleTicket
            - inGateTicket
            - outGateTicket
            - miscellaneous
            - accessorialAgreement
            - rateConfirmation
            - loadTender
            - invoice
            - customsDocuments
            - invoiceWithPaperwork
            - detentionLoading
            - detentionUnloading
            - palletReceipt
            - spotApproval
            - truckNotUsed
            - exitPass
            - balanceDue
            - packingList
            - photo
        visibility:
          type: array
          items:
            type: string
            enum:
              - carrier
              - client
              - internal
            default:
              - internal
          description: 'The visibility of the attachment (i.e. carrier, internal)'
    SFID:
      type: string
      pattern: '^(:?[a-zA-Z0-9]{15}|[a-zA-Z0-9]{18})$'
      maxLength: 18
      minLength: 15
      example: 00Q1U00000VEwcHUAT
    account:
      type: object
      required:
        - guid
      properties:
        guid:
          oneOf:
            - $ref: '#/components/schemas/guid'
            - $ref: '#/components/schemas/SFID'
        name:
          type: string
    email:
      type: string
      format: email
    phoneNumber:
      type: string
      pattern: \d+
      example: (916) 999-1234
    Contact:
      type: object
      required:
        - name
      properties:
        guid:
          $ref: '#/components/schemas/guid'
        name:
          type: string
          minLength: 1
          maxLength: 121
        email:
          $ref: '#/components/schemas/email'
        phoneNumber:
          $ref: '#/components/schemas/phoneNumber'
        mobileNumber:
          $ref: '#/components/schemas/phoneNumber'
    stopType:
      description: >-
        Describes the type of stop, use pickup to indicate that the stop is for
        picking up commodities, use delivery for dropping off commodities.
      type: string
      enum:
        - pickup
        - delivery
    stopDateType:
      type: string
      enum:
        - estimated
        - exactly
        - no later than
        - no earlier than
    Stop:
      type: object
      required:
        - sequence
        - stopType
        - terminal
        - commodities
      properties:
        guid:
          $ref: '#/components/schemas/guid'
        index:
          description: >
            A unique arbitrary string that will be used to reference this stop
            record inside of other objects.
          type: string
          nullable: true
        sequence:
          type: integer
          description: >-
            The order in which the stops need to be visited. This number should
            be assigned in increasing order. Magnitude is arbitrary.
          nullable: false
        stopType:
          $ref: '#/components/schemas/stopType'
        notes:
          description: Used to convey any instructions about the stops.
          type: string
          nullable: true
        dateRequestedStart:
          description: >
            This date is requested by the customer. The earliest date this stop
            should be worked.
          type: string
          format: date-time
          example: '2021-09-09T13:45:45.000Z'
          nullable: true
        dateRequestedEnd:
          description: >
            This date is requested by the customer. The latest date this stop
            should be worked.
          type: string
          format: date-time
          example: '2021-09-09T13:45:45.000Z'
          nullable: true
        dateRequestedType:
          description: Defines the type of requested date the customer requested.
          $ref: '#/components/schemas/stopDateType'
        dateEstimatedStart:
          description: >
            This date is submitted by the carrier/vendor. The earliest date this
            stop could be worked.
          type: string
          format: date-time
          example: '2021-09-09T13:45:45.000Z'
          nullable: true
        dateEstimatedEnd:
          description: >
            This date is submitted by the carrier/vendor. The latest date this
            stop could be worked.
          type: string
          format: date-time
          example: '2021-09-09T13:45:45.000Z'
          nullable: true
        dateEstimatedType:
          description: Defines the type of estimated date the carrier/vendor submitted.
          $ref: '#/components/schemas/stopDateType'
        dateScheduledStart:
          description: >
            This date is submitted by the dispatcher. The earliest date this
            stop will be worked
          type: string
          format: date-time
          example: '2021-09-09T13:45:45.000Z'
          nullable: true
        dateScheduledEnd:
          description: >
            This date is submitted by the dispatcher. The latest date this stop
            will be worked
          type: string
          format: date-time
          example: '2021-09-09T13:45:45.000Z'
          nullable: true
        dateScheduledType:
          description: Defined the type of scheduled date the dispatcher submitted.
          $ref: '#/components/schemas/stopDateType'
        primaryContact:
          $ref: '#/components/schemas/Contact'
        alternativeContact:
          $ref: '#/components/schemas/Contact'
        terminal:
          type: string
          description: The value of the index field from a Terminal in this payload.
          nullable: false
        commodities:
          type: array
          minLength: 1
          items:
            type: object
            properties:
              index:
                type: string
                description: The value of the index field from a Commodity in this payload.
              lotNumber:
                type: string
                description: The lot number for this commodity at this stop.
            required:
              - index
    zipCode:
      type: string
      example: '98765'
    latitude:
      description: Number describing the latitude coordinate.
      example: 12.5372125
      type: number
      format: float
      minimum: -90
      maximum: 90
    longitude:
      description: Number describing the longitude coordinate.
      example: 45.6208283
      type: number
      format: float
      minimum: -180
      maximum: 180
    Terminal:
      type: object
      required:
        - name
        - zipCode
      properties:
        name:
          description: >-
            A non-unique name for this terminal that will be displayed to the
            users.
          type: string
          maxLength: 255
        street1:
          type: string
          maxLength: 64
        street2:
          type: string
          maxLength: 64
          nullable: true
        state:
          type: string
          maxLength: 100
        city:
          type: string
          maxLength: 64
        country:
          type: string
          maxLength: 64
        zipCode:
          $ref: '#/components/schemas/zipCode'
        latitude:
          $ref: '#/components/schemas/latitude'
        longitude:
          $ref: '#/components/schemas/longitude'
    CommodityBase:
      description: >-
        The real world item(s) that need to be transported between two real
        world locations
      type: object
      properties:
        identifier:
          description: An Identifying string like a VIN or Serial number.
          type: string
          maxLength: 255
          example: ABC1234-GF56-DEADBEEF
        description:
          description: A breif description of the commodity.
          type: string
          maxLength: 255
          nullable: true
        quantity:
          description: The number of separate pieces in this commodity.
          type: integer
          nullable: true
        length:
          description: The length of the commodity in US feet.
          type: integer
          minimum: 0
          nullable: true
        weight:
          description: The weight of the commodity in US pounds.
          type: integer
          minimum: 0
          nullable: true
        extraExternalData:
          description: >-
            Any information about the commodity that is stored in external
            systems. This is a free response json field.
          type: object
          nullable: true
    Commodity with Type ID:
      allOf:
        - type: object
          properties:
            typeId:
              description: |
                Available Values:
                  * `1` - vehicle: coupe
                  * `2` - vehicle: convertible
                  * `3` - vehicle: sedan
                  * `4` - vehicle: SUV
                  * `5` - vehicle: minivan
                  * `6` - vehicle: pickup truck (2 door)
                  * `7` - vehicle: pickup truck (4 door)
                  * `8` - vehicle: pickup dually
                  * `9` - vehicle: motorcycle
                  * `10` - vehicle: ATV
                  * `11` - vehicle: boat
                  * `12` - vehicle: RV
                  * `13` - vehicle: trailer (5th wheel)
                  * `14` - vehicle: trailer (bumper pull)
                  * `15` - vehicle: trailer (gooseneck)
                  * `16` - vehicle: cargo van
                  * `17` - vehicle: box truck
                  * `18` - vehicle: day cab
                  * `19` - vehicle: sleeper cab
                  * `20` - vehicle: other
                  * `21` - freight: bulk
                  * `22` - freight: crushed cars
                  * `23` - freight: other
              type: integer
              minimum: 1
              maximum: 23
          required:
            - typeId
        - $ref: '#/components/schemas/CommodityBase'
    Commodity Freight:
      type: object
      properties:
        category:
          type: string
          enum:
            - freight
        type:
          type: string
          enum:
            - bulk
            - crushed cars
            - other
    Commodity Vehicle:
      type: object
      properties:
        category:
          type: string
          enum:
            - vehicle
        type:
          type: string
          enum:
            - coupe
            - convertible
            - sedan
            - SUV
            - minivan
            - pickup truck (2 door)
            - pickup truck (4 door)
            - pickup dually
            - motorcycle
            - ATV
            - boat
            - RV
            - trailer (5th wheel)
            - trailer (bumper pull)
            - trailer (gooseneck)
            - cargo van
            - box truck
            - day cab
            - sleeper cab
            - other
    CommodityCategoryBase:
      oneOf:
        - $ref: '#/components/schemas/Commodity Freight'
        - $ref: '#/components/schemas/Commodity Vehicle'
    CommodityCategory:
      allOf:
        - $ref: '#/components/schemas/CommodityCategoryBase'
        - type: object
          required:
            - category
            - type
    Commodity with Category and Type:
      allOf:
        - $ref: '#/components/schemas/CommodityCategory'
        - $ref: '#/components/schemas/CommodityBase'
    Commodity:
      oneOf:
        - $ref: '#/components/schemas/Commodity with Type ID'
        - $ref: '#/components/schemas/Commodity with Category and Type'
    EDI214StopStatus:
      allOf:
        - $ref: '#/components/schemas/EDI214Status'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/edi214StopCodeType'
            reason:
              description: EDI 214 AT702 appointment status reason code
    EDI214Appointment:
      allOf:
        - $ref: '#/components/schemas/EDI214Status'
        - type: object
          required:
            - code
            - type
            - reason
          properties:
            type:
              $ref: '#/components/schemas/edi214Type'
            code:
              $ref: '#/components/schemas/edi214AppointmentCodeType'
            reason:
              description: EDI 214 AT704 appointment status reason code
    edi214Type:
      type: string
      enum:
        - status
        - appointment
    edi214StatusReasonType:
      type: string
      enum:
        - A1
        - A2
        - A3
        - A5
        - A6
        - AA
        - AD
        - AE
        - AF
        - AG
        - AH
        - AI
        - AJ
        - AK
        - AL
        - AM
        - AN
        - AO
        - AP
        - AQ
        - AR
        - AS
        - AT
        - AU
        - AV
        - AW
        - AX
        - AY
        - AZ
        - B1
        - B2
        - B4
        - B5
        - B8
        - B9
        - BB
        - BC
        - BD
        - BE
        - BF
        - BG
        - BH
        - BI
        - BJ
        - BK
        - BL
        - BM
        - BN
        - BO
        - BP
        - BQ
        - BR
        - BS
        - BT
        - C1
        - C2
        - C3
        - C4
        - C5
        - C6
        - C7
        - C8
        - C9
        - CA
        - CB
        - CC
        - D1
        - D2
        - F1
        - F2
        - HB
        - NA
        - NS
        - P1
        - P2
        - P3
        - P4
        - RC
        - S1
        - T1
        - T2
        - T3
        - T4
        - T5
        - T6
        - T7
      minLength: 2
      maxLength: 2
    EDI214Status:
      type: object
      description: Represents the status/appointment update for the load tender
      required:
        - code
        - type
        - reason
      properties:
        type:
          $ref: '#/components/schemas/edi214Type'
        code:
          type: string
          minLength: 2
          maxLength: 2
        reason:
          $ref: '#/components/schemas/edi214StatusReasonType'
    edi214StopCodeType:
      description: EDI 214  AT701 appointment status code
      type: string
      enum:
        - A3
        - A7
        - A9
        - AF
        - AG
        - AH
        - AI
        - AJ
        - AM
        - AN
        - AP
        - AR
        - AV
        - B6
        - BA
        - BC
        - C1
        - CA
        - CD
        - CL
        - CP
        - D1
        - I1
        - J1
        - K1
        - L1
        - OA
        - OO
        - P1
        - PR
        - R1
        - RL
        - S1
        - SD
        - X1
        - X2
        - X3
        - X4
        - X5
        - X6
        - X8
        - XB
    edi214AppointmentCodeType:
      description: EDI 214  AT703 appointment status code
      type: string
      enum:
        - AA
        - AB
        - AC
        - ED
        - EP
        - LD
        - LP
        - X9
        - XA
    edi:
      description: EDI data parsed in JSON format. Do not decode/encode as JSON String.
      type: object
    ediActionType:
      type: string
      enum:
        - accept
        - decline
    referenceNumber:
      type: string
      maxLength: 64
      description: The external identification number the client uses for this order.
    inspectionType:
      type: string
      enum:
        - standard
        - advanced
      default: standard
    properties-inspectionType:
      allOf:
        - $ref: '#/components/schemas/inspectionType'
        - description: This field currently has no use.
    instructions:
      type: string
      description: The instructions for the order provided by the client.
    clientNotes:
      type: object
      properties:
        note:
          description: Notes that are shared with the client
          type: string
          maxLength: 3000
          nullable: true
          example: Your order has been shipped and is on its way
    estimatedRevenue:
      type: string
      format: currency
      description: The amount owed by the client.
    estimatedExpense:
      type: string
      format: currency
      description: The amount owed to the vendors.
      example: '99.00'
    quotedRevenue:
      type: string
      format: currency
      description: The amount quoted to the client for this order.
      example: '99.00'
    estimatedDistance:
      type: number
      description: The distance required to travel to complete the full order in miles.
      nullable: true
      minimum: 0
      maximum: 9999999.9
    isDummy:
      type: boolean
      default: false
      example: false
    dateExpectedCompleteBy:
      type: string
      format: date-time
      description: The date that this order is expected to be completed by.
    bol:
      type: string
      maxLength: 64
      description: The Bill of Lading reference number for this order.
    bolUrl:
      type: string
      maxLength: 1024
      description: The URL to the Bill of Lading for this order.
    client:
      allOf:
        - $ref: '#/components/schemas/account'
        - description: The client that placed the order
    clientContact:
      allOf:
        - $ref: '#/components/schemas/Contact'
        - description: The contact that works for the client.
    consignee:
      allOf:
        - $ref: '#/components/schemas/account'
        - description: The party that is responsible for paying for the order
    guidObject:
      type: object
      required:
        - guid
      properties:
        guid:
          $ref: '#/components/schemas/guid'
    dispatcher:
      allOf:
        - $ref: '#/components/schemas/guidObject'
        - description: The dispatcher responsible for this order.
    referrer:
      allOf:
        - $ref: '#/components/schemas/guidObject'
        - description: The account that referred this order to us.
    salesperson:
      allOf:
        - $ref: '#/components/schemas/guidObject'
        - description: The salesperson responsible for managing this order.
    Job with Type ID:
      type: object
      properties:
        typeId:
          type: integer
          description: |
            Available Values:
              * `1` - "transport": "transport" 
              * `2` - "service": "locksmith" 
              * `3` - "service": "unloading" 
              * `4` - "service": "loading" 
              * `5` - "service": "repair" 
              * `6` - "service": "diagnostics" 
              * `7` - "service": "dry run"
          minimum: 1
          maximum: 7
      required:
        - typeId
    Job Transport:
      type: object
      properties:
        category:
          type: string
          enum:
            - transport
        type:
          type: string
          enum:
            - transport
    Job Service:
      type: object
      properties:
        category:
          type: string
          enum:
            - service
        type:
          type: string
          enum:
            - locksmith
            - unloading
            - loading
            - repair
            - diagnostics
            - dry run
    JobCategoryBase:
      oneOf:
        - $ref: '#/components/schemas/Job Transport'
        - $ref: '#/components/schemas/Job Service'
    Job with Category and Type:
      allOf:
        - $ref: '#/components/schemas/JobCategoryBase'
        - type: object
          required:
            - category
            - type
    Job:
      oneOf:
        - $ref: '#/components/schemas/Job with Type ID'
        - $ref: '#/components/schemas/Job with Category and Type'
    index:
      type: string
      description: >-
        A unique and arbitrary string that will be used to reference this record
        in this payload.
      example: record_1234
    indexObject:
      type: object
      properties:
        index:
          $ref: '#/components/schemas/index'
      required:
        - index
    currency:
      type: string
      format: currency
      pattern: '^(?:[1-9][0-9]*|0)\.[0-9]{2}$'
      example: '12345.67'
    orderExpense:
      type: object
      properties:
        account:
          type: string
          enum:
            - client
            - vendor
            - salesperson
            - referrer
            - dispatcher
        amount:
          allOf:
            - $ref: '#/components/schemas/currency'
            - description: The amount that is owed for this expense.
              minimum: 0
        item:
          description: The invoice line item name that this expense references.
          type: string
        commodity:
          description: The index field in the commodities array in this payload.
          type: string
      required:
        - account
        - amount
        - item
    CommodityInbound:
      allOf:
        - $ref: '#/components/schemas/indexObject'
        - $ref: '#/components/schemas/Commodity'
    orderStatus:
      type: string
      enum:
        - New
        - On Hold
        - Ready
        - Posted
        - Requests
        - Pending
        - Declined
        - Picked Up
        - Delivered
        - Canceled
        - Deleted
    dateTime:
      type: string
      format: date-time
      example: '2021-08-10T07:59:59.000Z'
    dateCreated:
      allOf:
        - $ref: '#/components/schemas/dateTime'
        - type: string
          description: The date this record was created.
          readOnly: true
          nullable: false
          example: '2021-09-23T12:14:45.000Z'
    dateUpdated:
      allOf:
        - $ref: '#/components/schemas/dateTime'
        - type: string
          format: date-time
          description: The date this record was last updated.
          readOnly: true
          nullable: false
    createdByGuid:
      allOf:
        - $ref: '#/components/schemas/guid'
        - type: string
          description: The TMS User account that created this record.
          readOnly: true
          nullable: false
    updatedByGuid:
      allOf:
        - $ref: '#/components/schemas/guid'
        - type: string
          description: The TMS User account that last updated this record.
          readOnly: true
          nullable: false
    Account_client:
      type: object
      required:
        - guid
      properties:
        rtype:
          type: string
          readOnly: true
          default: client
        billingCity:
          type: string
        billingCountry:
          type: string
        billingLatitude:
          $ref: '#/components/schemas/latitude'
        billingLongitude:
          type: string
        billingPostalCode:
          type: string
        billingState:
          type: string
        billingStreet:
          type: string
        email:
          type: string
        loadboardInstructions:
          type: string
        name:
          type: string
        orderInstructions:
          type: string
          format: text
        phoneNumber:
          type: string
        shippingCity:
          type: string
        shippingCountry:
          type: string
        shippingLatitude:
          type: string
        shippingLongitude:
          type: string
        shippingPostalCode:
          type: string
        shippingState:
          type: string
        shippingStreet:
          type: string
    CommodityOutbound:
      allOf:
        - $ref: '#/components/schemas/guidObject'
        - $ref: '#/components/schemas/Commodity with Type ID'
        - $ref: '#/components/schemas/Commodity with Category and Type'
    guidObjectNullable:
      type: object
      nullable: true
      required:
        - guid
      properties:
        guid:
          $ref: '#/components/schemas/guid'
    terminalLocationType:
      type: string
      enum:
        - dealer
        - private
        - auction
        - repo yard
        - port
        - business
    CommodityUpdate:
      allOf:
        - type: object
          properties:
            identifier:
              description: An Identifying string like a VIN or Serial number.
              type: string
              maxLength: 255
              example: ABC1234-GF56-DEADBEEF
            description:
              description: A breif description of the commodity.
              type: string
              maxLength: 255
              nullable: true
            quantity:
              description: The number of separate pieces in this commodity.
              type: integer
              nullable: true
            length:
              description: The length of the commodity in US feet.
              type: integer
              minimum: 0
              nullable: true
            weight:
              description: The weight of the commodity in US pounds.
              type: integer
              minimum: 0
              nullable: true
            extraExternalData:
              description: >-
                Any information about the commodity that is stored in external
                systems. This is a free response json field.
              type: object
              nullable: true
        - oneOf:
            - type: object
              properties:
                typeId:
                  description: |
                    Available Values:
                      * `1` - vehicle: coupe
                      * `2` - vehicle: convertible
                      * `3` - vehicle: sedan
                      * `4` - vehicle: SUV
                      * `5` - vehicle: minivan
                      * `6` - vehicle: pickup truck (2 door)
                      * `7` - vehicle: pickup truck (4 door)
                      * `8` - vehicle: pickup dually
                      * `9` - vehicle: motorcycle
                      * `10` - vehicle: ATV
                      * `11` - vehicle: boat
                      * `12` - vehicle: RV
                      * `13` - vehicle: trailer (5th wheel)
                      * `14` - vehicle: trailer (bumper pull)
                      * `15` - vehicle: trailer (gooseneck)
                      * `16` - vehicle: cargo van
                      * `17` - vehicle: box truck
                      * `18` - vehicle: day cab
                      * `19` - vehicle: sleeper cab
                      * `20` - vehicle: other
                      * `21` - freight: bulk
                      * `22` - freight: crushed cars
                      * `23` - freight: other
                  type: integer
                  minimum: 1
                  maximum: 23
            - $ref: '#/components/schemas/CommodityCategory'
    properties-estimatedExpense:
      type: string
      format: currency
      description: The amount owed to the vendors.
    properties-quotedRevenue:
      type: string
      format: currency
      description: The amount quoted to the client for this order.
    properties-referenceNumber:
      type: string
      maxLength: 64
      description: The external identification number the client uses for this order.
      nullable: true
    properties-clientContact:
      description: The contact that works for the client.
      type: object
      nullable: true
      anyOf:
        - additionalProperties: false
          properties:
            guid:
              $ref: '#/components/schemas/guid'
            name:
              type: string
              minLength: 1
              maxLength: 121
            email:
              $ref: '#/components/schemas/email'
            phoneNumber:
              $ref: '#/components/schemas/phoneNumber'
            mobileNumber:
              $ref: '#/components/schemas/phoneNumber'
        - additionalProperties: false
          properties:
            guid:
              $ref: '#/components/schemas/guid'
    properties-dispatcher:
      allOf:
        - description: The dispatcher responsible for this order.
        - $ref: '#/components/schemas/guidObjectNullable'
    properties-referrer:
      allOf:
        - description: The account that referred this order to us.
        - $ref: '#/components/schemas/guidObjectNullable'
    properties-salesperson:
      allOf:
        - description: The salesperson responsible for managing this order.
        - $ref: '#/components/schemas/guidObjectNullable'
    properties-client:
      allOf:
        - description: The client that placed the order
        - $ref: '#/components/schemas/account'
    properties-consignee:
      allOf:
        - description: The party that is responsible for paying for the order
        - $ref: '#/components/schemas/account'
    page:
      description: 'For pagination purposes, page to return.'
      type: integer
      minimum: 1
      default: 1
      example: 1
    rowCount:
      description: 'For pagination purposes, number of entries per page.'
      type: integer
      default: 25
    expense:
      type: object
      properties:
        notes:
          description: Optional notes
          type: string
          nullable: true
        amount:
          description: New expense amount
          oneOf:
            - type: number
            - type: string
        itemId:
          description: New item id
          type: number
        commodityGuid:
          description: New commodity guid
          type: string
          format: uuid
        guid:
          description: expense guid
          type: string
          format: uuid
        invoiceGuid:
          description: Related invoice guid
          type: string
          format: uuid
        isPaid:
          description: Is expense paid
          type: boolean
      required:
        - itemId
        - amount
    accountType:
      type: string
      enum:
        - client
        - carrier
        - referrer
        - employee
        - dispatcher
    LoadBoard Request Status:
      type: string
      enum:
        - Accepted
        - Canceled
        - New
        - Declined
    Loadboard Name:
      type: string
      enum:
        - SUPERDISPATCH
        - CENTRALDISPATCH
        - SHIPCARS
        - CARDELIVERYNETWORK
    extraExternalData:
      type: object
      description: extra data that varries depending incoming posting
      properties:
        carrierInfo:
          type: object
          description: carrierInfo object that holds carrier contact information .
          properties:
            guid:
              type: string
              description: ID or GUID of the carrier.
            name:
              type: string
              description: Full name of the carrier.
              example: RCG Logistics LLC.
            phone:
              type: string
              description: First contact number of the carrier.
              example: (916) 123-4566
            email:
              type: string
              description: Contact email address of the carrier.
              example: dimitar.derentsev+rcg@ship.cars
            contactName:
              type: string
              description: Name of the person who to contact.
              nullable: true
              example: First Last
            address:
              type: string
              description: Street name and number from the carrier address.
              example: 1900 Tech Center Dr.
            city:
              type: string
              description: City name from the carrier address.
              example: Chicago
            state:
              type: string
              description: Abbreviation of the state from the company address.
              example: IL
            zip:
              type: string
              description: Zip code from the carrier address.
              example: 19505
          required:
            - guid
            - name
            - phone
            - email
            - address
            - city
            - state
            - zip
        externalOrderID:
          type: string
          description: order GUID of external post.
      required:
        - carrierInfo
        - externalOrderID
    deletedByGuid:
      allOf:
        - $ref: '#/components/schemas/guid'
        - type: string
          description: The TMS User account that last deleted this record.
          readOnly: true
          nullable: false
    mainResponsePayload:
      type: object
      properties:
        guid:
          $ref: '#/components/schemas/guid'
        status:
          $ref: '#/components/schemas/LoadBoard Request Status'
          example: Accepted
        price:
          type: string
          format: currency
          example: 125
        externalPostGuid:
          $ref: '#/components/schemas/guid'
        loadboard:
          $ref: '#/components/schemas/Loadboard Name'
        dateOfferSent:
          type: string
          format: date-time
          example: '2021-09-14T18:10:21.866Z'
        datePickupStart:
          type: string
          format: date-time
          example: '2021-09-14T14:00:00.000Z'
        datePickupEnd:
          type: string
          format: date-time
          nullable: true
          example: '2021-09-14T14:00:00.000Z'
        dateDeliveryStart:
          type: string
          format: date-time
          example: '2021-09-14T14:00:00.000Z'
        dateDeliveryEnd":
          type: string
          format: date-time
          nullable: true
          example: '2021-09-14T14:00:00.000Z'
        carrierIdentifier:
          type: string
          nullable: true
          maxLength: 32
          example: 373722
        declineReason:
          type: string
          example: Becasuse you are cheap.
        extraExternalData:
          $ref: '#/components/schemas/extraExternalData'
        isActive:
          type: boolean
          example: true
        isAccepted:
          type: boolean
          example: false
        isDeclined:
          type: boolean
          example: false
        isCanceled:
          type: boolean
          example: true
        isSynced:
          type: boolean
          example: true
        isDeleted:
          type: boolean
          example: false
        hasError:
          type: boolean
          example: false
        externalError:
          type: string
          example: null
        dateCreated:
          type: string
          format: date-time
          nullable: true
          example: '2021-09-14T14:00:00.000Z'
        dateUpdated:
          type: string
          format: date-time
          nullable: true
          example: '2021-09-14T14:00:00.000Z'
        dateDeleted:
          type: string
          format: date-time
          nullable: true
          example: '2021-09-14T14:00:00.000Z'
        createdByGuid:
          $ref: '#/components/schemas/createdByGuid'
        updatedByGuid:
          $ref: '#/components/schemas/updatedByGuid'
        deletedByGuid:
          $ref: '#/components/schemas/deletedByGuid'
    postRequestPayload:
      type: object
      properties:
        price:
          type: string
          format: currency
          description: Price offered by carrier for job.
        externalPostGuid:
          type: string
          description: Loadboards external GUID for identifying the request.
        dateOfferSent:
          type: string
          format: date-time
          description: When the request was created by the carrier.
        datePickupStart:
          type: string
          format: date-time
          description: Earliest date carrier can pick up load.
        datePickupEnd:
          type: string
          format: date-time
          nullable: true
          description: Latest date the carrier can pick up load.
        dateDeliveryStart:
          type: string
          format: date-time
          nullable: true
          description: Earliest date the carrier can deliver load.
        dateDeliveryEnd":
          type: string
          format: date-time
          nullable: true
          description: Latest date the carrier can deliver load.
        carrierIdentifier:
          type: string
          nullable: true
          maxLength: 32
          description: 'Number identifying the carrier ie. MC, DOT.'
        loadboard:
          $ref: '#/components/schemas/Loadboard Name'
        extraExternalData:
          $ref: '#/components/schemas/extraExternalData'
      required:
        - price
        - externalPostGuid
        - dateOfferSent
        - datePickupStart
        - dateDeliveryStart
        - loadboard
        - extraExternalData
    noteObject:
      type: string
      enum:
        - job
        - order
    title:
      type: string
      description: 'This is a useless field, so fill it up as you wish.'
    body:
      description: Note for internal use only.
      type: string
      maxLength: 3000
    type:
      type: string
      enum:
        - lead
        - flag
        - update
      description: types of notes that internal notes store
      example: lead
