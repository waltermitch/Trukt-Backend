openapi: 3.0.0
info:
  version: 0.0.1
  title: Trukt
  description: Transportation management system
  license:
    name: Private
servers:
  - url: 'https://truktbackend-dev.rcgauto.p.azurewebsites.net'
    description: Development server
  - url: 'https://truktbackend-staging.rcgauto.p.azurewebsites.net'
    description: Staging server
  - url: 'https://truktbackend.rcgauto.p.azurewebsites.net'
    description: Production server
paths:
  /attachments:
    post:
      summary: Add An Attachment
      operationId: createAttachment
      description: Add Attachment to a given job/order
      tags:
        - Attachments
      parameters:
        - in: query
          name: parent
          required: true
          allowEmptyValue: false
          schema:
            $ref: '#/components/schemas/guid'
          description: The guid of the parent object
        - in: query
          name: parentType
          required: true
          allowEmptyValue: false
          description: 'The type of the parent object (i.e job, order)'
          schema:
            enum:
              - jobs
        - in: query
          name: attachmentType
          required: false
          allowEmptyValue: true
          description: 'The type of attachment (i.e. photo, billOfLading, etc)'
          schema:
            enum:
              - photo
            default: undefined
        - in: query
          name: visibility
          schema:
            type: array
            items:
              type: string
              enum:
                - carrier
                - client
                - internal
              default:
                - internal
          required: false
          explode: false
          allowEmptyValue: true
          description: 'The visibility of the attachment (i.e. carrier, internal)'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                  type: array
                  items:
                    $ref: '#/components/schemas/File'
              required:
                - filename
      responses:
        '201':
          description: Created Attachment
          content:
            application/json: {}
  /attachments/search:
    get:
      summary: Search Attachments
      operationId: searchAttachments
      description: Search For Attachments of a given job/order
      tags:
        - Attachments
      parameters:
        - in: query
          name: parent
          required: true
          allowEmptyValue: false
          schema:
            $ref: '#/components/schemas/guid'
          description: The guid of the parent object
        - in: query
          name: parentType
          required: true
          allowEmptyValue: false
          description: 'The type of the parent object (i.e job, order)'
          schema:
            enum:
              - jobs
        - in: query
          name: attachmentType
          required: false
          allowEmptyValue: true
          description: 'The type of attachment (i.e. photo, billOfLading, etc)'
          schema:
            enum:
              - photo
            default: undefined
        - in: query
          name: visibility
          schema:
            type: array
            items:
              type: string
              enum:
                - carrier
                - client
                - internal
              default:
                - internal
          required: false
          explode: false
          allowEmptyValue: true
          description: 'The visibility of the attachment (i.e. carrier, internal)'
      responses:
        '201':
          description: Found Attachments
          content:
            application/json: {}
  '/attachments/{guid}':
    get:
      summary: Get Attachment
      operationId: getAttachment
      description: Get Attachment by guid
      tags:
        - Attachments
      parameters:
        - in: path
          name: guid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: Attachment
          content:
            application/json: {}
    delete:
      summary: Delete Attachment
      operationId: deleteAttachment
      description: Delete Attachment of a given job/order
      tags:
        - Attachments
      parameters:
        - in: path
          name: guid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '204':
          description: Deleted Attachment
    patch:
      summary: Update Attachment
      operationId: updateAttachment
      description: Update Attachment of a given job/order
      tags:
        - Attachments
      parameters:
        - in: path
          name: guid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attachment'
      responses:
        '204':
          description: updated Attachment
  /edi/204/inbound:
    post:
      summary: Create a load tender
      operationId: createLoadTender
      description: Create a load tender that will eventually be accepted or rejected.
      tags:
        - EDI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Created load tender.
          content:
            application/json: {}
  /edi/214/inbound:
    put:
      summary: Update a load tender status
      operationId: updateLoadTenderStatus
      description: Update the status or set appointment of a load tender.
      tags:
        - EDI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - partner
                - reference
                - location
                - status
                - datetime
              properties:
                partner:
                  description: The partner that wishes to update a load tender
                  oneOf:
                    - $ref: '#/components/schemas/SFID'
                    - type: string
                      format: uuid
                reference:
                  description: >-
                    The shipment/reference number from the load that was created
                    via EDI 204 load tender
                  type: string
                  maxLength: 64
                commodity:
                  description: >-
                    The identifier field from a commodity that was created via
                    EDI 204 load tender
                  type: string
                  maxLength: 255
                location:
                  description: Include the location to update the respective stop
                  type: object
                  properties:
                    city:
                      type: string
                      maxLength: 64
                    state:
                      type: string
                      maxLength: 100
                    country:
                      type: string
                      maxLength: 64
                    latitude:
                      $ref: '#/components/schemas/latitude'
                    longitude:
                      $ref: '#/components/schemas/longitude'
                status:
                  oneOf:
                    - $ref: '#/components/schemas/EDI214StopStatus'
                    - $ref: '#/components/schemas/EDI214Appointment'
                  description: >-
                    Represents the status/appointment update for the load
                    tender.
                  type: object
                  discriminator:
                    propertyName: type
                    mapping:
                      status: '#/components/schemas/EDI214StopStatus'
                      appointment: '#/components/schemas/EDI214Appointment'
                datetime:
                  $ref: '#/components/schemas/dateTime'
      responses:
        '200':
          description: Updated Load Tender status.
          content:
            application/json: {}
  /edi/214/outbound:
    get:
      summary: Update a load tender status
      operationId: notifyLoadTenderStatus
      description: >-
        This endpoint is designed for development purposes only.  It will
        generate a sample payload for a specific load tender described by query
        parameters.
      tags:
        - EDI
      parameters:
        - name: reference
          schema:
            type: number
          required: true
          allowEmptyValue: false
          description: The reference number of a load tender
          in: query
      responses:
        '200':
          description: Outbound Load Tender Update
          content:
            application/json:
              schema:
                type: object
                required:
                  - partner
                  - reference
                  - location
                  - status
                  - datetime
                properties:
                  order:
                    description: >-
                      The guid of the order in our system that is being updated.
                      may be used to fetch additional information
                    type: string
                    format: uuid
                  partner:
                    description: The partner that wishes to update a load tender
                    oneOf:
                      - $ref: '#/components/schemas/SFID'
                      - type: string
                        format: uuid
                  reference:
                    description: >-
                      The shipment/reference number from the load that was
                      created via EDI 204 load tender
                    type: string
                    maxLength: 64
                  commodity:
                    description: >-
                      The identifier field from a commodity that was created via
                      EDI 204 load tender
                    type: string
                    maxLength: 255
                  location:
                    description: The load tender's stop whose status will be updated.
                    type: object
                    properties:
                      city:
                        type: string
                        maxLength: 64
                      state:
                        type: string
                        maxLength: 100
                      country:
                        type: string
                        maxLength: 64
                      latitude:
                        $ref: '#/components/schemas/latitude'
                      longitude:
                        $ref: '#/components/schemas/longitude'
                  status:
                    oneOf:
                      - $ref: '#/components/schemas/EDI214StopStatus'
                      - $ref: '#/components/schemas/EDI214Appointment'
                    description: >-
                      Represents the status/appointment update for the load
                      tender
                    type: object
                    discriminator:
                      propertyName: type
                      mapping:
                        status: '#/components/schemas/EDI214StopStatus'
                        appointment: '#/components/schemas/EDI214Appointment'
                  datetime:
                    $ref: '#/components/schemas/dateTime'
  /edi/990/outbound/accept:
    get:
      summary: Accept Load Tender
      operationId: acceptLoadTender
      description: >-
        This endpoint is designed for development purposes only.  It will
        generate a sample payload for a specific load tender described by query
        parameters.
      tags:
        - EDI
      parameters:
        - name: reference
          schema:
            type: number
          required: true
          allowEmptyValue: false
          description: The reference number of a load tender.
          in: query
        - name: partner
          schema:
            type: string
          required: true
          allowEmptyValue: false
          description: The partner ID provided when creating a load tender.
          in: query
      responses:
        '200':
          description: Sample outbound 990 accept payload.
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    description: The EDI load tender guid inside of RCG database
                    $ref: '#/components/schemas/guid'
                  partner:
                    description: >-
                      The EDI load tender client guid that was used when
                      creating a load tender in our system.
                    $ref: '#/components/schemas/SFID'
                  reference:
                    description: >-
                      The EDI load tender reference number used when creating a
                      load tender in our system.
                    type: string
                  action:
                    description: The action to take with the EDI load tender.
                    $ref: '#/components/schemas/ediActionType'
                  date:
                    description: The date the response was generated
                    $ref: '#/components/schemas/dateTime'
                  scac:
                    description: The scac number
                    type: string
                    format: scac
  /edi/990/outbound/reject:
    get:
      summary: Reject Load Tender
      operationId: rejectLoadTender
      description: >-
        This endpoint is designed for development purposes only.  It will
        generate a sample payload for a specific load tender described by query
        parameters.
      tags:
        - EDI
      parameters:
        - name: reference
          schema:
            type: number
          required: true
          allowEmptyValue: false
          description: The reference number of a load tender
          in: query
        - name: partner
          schema:
            type: string
          required: true
          allowEmptyValue: false
          description: The partner ID provided when creating a load tender
          in: query
      responses:
        '200':
          description: Sample outbound 990 reject payload.
          content:
            application/json:
              schema:
                type: object
                properties:
                  order:
                    description: The EDI load tender guid inside of RCG database
                    $ref: '#/components/schemas/guid'
                  partner:
                    description: >-
                      The EDI load tender client guid that was used when
                      creating a load tender in our system.
                    $ref: '#/components/schemas/SFID'
                  reference:
                    description: >-
                      The EDI load tender reference number used when creating a
                      load tender in our system.
                    type: string
                  action:
                    description: The action to take with the EDI load tender.
                    $ref: '#/components/schemas/ediActionType'
                  reason:
                    description: The reason for rejecting the EDI load tender.
                    type: string
                    maxLength: 60
                  date:
                    description: The date the response was generated
                    $ref: '#/components/schemas/dateTime'
                  scac:
                    description: The scac number
                    type: string
                    format: scac
  /order:
    post:
      summary: Create order
      operationId: postOrder
      description: Create order
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                referenceNumber:
                  type: string
                  maxLength: 64
                inspectionType:
                  type: string
                instructions:
                  type: string
                estimatedRevenue:
                  type: number
                estimatedExpense:
                  type: number
                estimatedDistance:
                  type: number
                client:
                  $ref: '#/components/schemas/guidObject'
                consignee:
                  $ref: '#/components/schemas/guidObject'
                clientContact:
                  type: object
                  properties:
                    guid:
                      $ref: '#/components/schemas/guid'
                    name:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    email:
                      $ref: '#/components/schemas/email'
                  required:
                    - guid
                    - name
                    - firstName
                    - lastName
                    - email
                jobs:
                  type: array
                  items:
                    type: object
                    properties:
                      index:
                        type: string
                      loadType:
                        type: string
                      inspectionType:
                        $ref: '#/components/schemas/inspectionType'
                      category:
                        $ref: '#/components/schemas/jobCategoryType'
                      type:
                        $ref: '#/components/schemas/jobType'
                      vendor:
                        $ref: '#/components/schemas/guidObject'
                      vendorContact:
                        $ref: '#/components/schemas/guidObject'
                      vendorAgent:
                        $ref: '#/components/schemas/guidObject'
                      dispatcher:
                        $ref: '#/components/schemas/guidObject'
                      stops:
                        type: array
                        items:
                          type: object
                          properties:
                            index:
                              type: string
                          required:
                            - index
                    required:
                      - index
                      - loadType
                      - inspectionType
                      - category
                      - type
                      - stops
                expenses:
                  type: array
                  items:
                    type: object
                    properties:
                      job:
                        type: string
                      account:
                        type: string
                      item:
                        type: string
                      amount:
                        type: number
                      commodity:
                        type: string
                    required:
                      - account
                      - item
                      - amount
                      - commodity
                stops:
                  type: array
                  items:
                    type: object
                    properties:
                      index:
                        type: string
                      stopType:
                        $ref: '#/components/schemas/stopType'
                      terminal:
                        type: string
                      sequence:
                        type: number
                      dateRequestedStart:
                        $ref: '#/components/schemas/dateTime'
                      dateRequestedEnd:
                        $ref: '#/components/schemas/dateTime'
                      dateRequestedType:
                        $ref: '#/components/schemas/stopDateType'
                      commodities:
                        type: array
                        items:
                          type: object
                          properties:
                            index:
                              type: string
                          required:
                            - index
                    required:
                      - index
                      - stopType
                      - terminal
                      - sequence
                      - dateRequestedStart
                      - dateRequestedEnd
                      - dateRequestedType
                      - commodities
                terminals:
                  type: array
                  items:
                    type: object
                    properties:
                      index:
                        type: string
                      name:
                        type: string
                      locationType:
                        oneOf:
                          - $ref: '#/components/schemas/stringNullable'
                          - $ref: '#/components/schemas/terminalLocationType'
                      street1:
                        type: string
                      street2:
                        $ref: '#/components/schemas/stringNullable'
                      state:
                        type: string
                      city:
                        type: string
                      country:
                        type: string
                      zipCode:
                        $ref: '#/components/schemas/zipCode'
                      latitude:
                        $ref: '#/components/schemas/latitude'
                      longitude:
                        $ref: '#/components/schemas/longitude'
                    required:
                      - index
                      - name
                      - street1
                      - state
                      - city
                      - country
                      - zipCode
                      - latitude
                      - longitude
                commodities:
                  type: array
                  items:
                    type: object
                    properties:
                      index:
                        type: string
                      capacity:
                        type: string
                      damaged:
                        type: string
                      inoperable:
                        type: string
                      length:
                        $ref: '#/components/schemas/numberNullable'
                      weight:
                        $ref: '#/components/schemas/numberNullable'
                      quantity:
                        $ref: '#/components/schemas/numberNullable'
                      description:
                        $ref: '#/components/schemas/stringNullable'
                      identifier:
                        type: string
                      extraExternalData:
                        $ref: '#/components/schemas/stringNullable'
                      year:
                        type: integer
                      make:
                        type: string
                      model:
                        type: string
                      trim:
                        $ref: '#/components/schemas/stringNullable'
                      typeId:
                        type: integer
                      category:
                        $ref: '#/components/schemas/commodityCategoryType'
                      type:
                        $ref: '#/components/schemas/commodityType'
                    required:
                      - index
                      - capacity
                      - damaged
                      - inoperable
                      - identifier
                      - year
                      - make
                      - model
                      - typeId
                      - category
                      - type
                distance:
                  type: number
                isDummy:
                  type: boolean
                quotedRevenue:
                  type: number
                dateExpectedCompleteBy:
                  $ref: '#/components/schemas/dateTime'
                isTender:
                  type: boolean
                bol:
                  type: string
                dispatcher:
                  $ref: '#/components/schemas/guidObject'
                referrer:
                  $ref: '#/components/schemas/guidObject'
                salesperson:
                  $ref: '#/components/schemas/guidObject'
              required:
                - referenceNumber
                - inspectionType
                - estimatedRevenue
                - estimatedExpense
                - estimatedDistance
                - client
                - jobs
                - expenses
                - stops
                - terminals
                - commodities
      responses:
        '200':
          description: Orders
          content:
            application/json: {}
  /order/getorders:
    post:
      summary: Search orders
      operationId: getOrders
      description: Search all orders
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  $ref: '#/components/schemas/page'
                rowCount:
                  $ref: '#/components/schemas/rowCount'
                filters:
                  description: Request filters to apply
                  type: object
                  properties:
                    pickup:
                      description: Coordinates on which to search for order pickups
                      type: array
                      items:
                        type: object
                        properties:
                          longitude:
                            $ref: '#/components/schemas/longitude'
                          latitude:
                            $ref: '#/components/schemas/latitude'
                          radius:
                            description: Search maximun radius for coordinates
                            type: integer
                            default: 1
                        required:
                          - longitude
                          - latitude
                    delivery:
                      description: Coordinates on which to search for delivery pickups
                      type: array
                      items:
                        type: object
                        properties:
                          longitude:
                            $ref: '#/components/schemas/longitude'
                          latitude:
                            $ref: '#/components/schemas/latitude'
                          radius:
                            description: Search maximun radius for coordinates
                            type: integer
                            default: 1
                        required:
                          - longitude
                          - latitude
                    status:
                      description: Filter for order status
                      type: array
                      items:
                        type: string
                        example: new
                    customer:
                      description: Filter for order customer guid
                      type: array
                      items:
                        $ref: '#/components/schemas/guid'
                    carrier:
                      description: Filter for order carrier guid
                      type: array
                      items:
                        $ref: '#/components/schemas/guid'
                    dispatcher:
                      description: Filter for order dispatcher guid
                      type: array
                      items:
                        $ref: '#/components/schemas/guid'
                    salesperson:
                      description: Filter for order salesperson guid
                      type: array
                      items:
                        $ref: '#/components/schemas/guid'
                    dates:
                      description: Filter for status in a specific date
                      type: array
                      items:
                        type: object
                        properties:
                          status:
                            description: Order status
                            type: number
                            example: 1
                          date:
                            $ref: '#/components/schemas/date'
                          comparison:
                            description: Type of restriction in the date search
                            type: string
                            default: equal
                        required:
                          - status
                          - date
      responses:
        '200':
          description: Orders
          content:
            application/json: {}
  '/order/{guid}':
    get:
      summary: Get order by guid
      operationId: getOrder
      description: Get order by guid
      tags:
        - Order
      parameters:
        - in: path
          name: guid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: order
          content:
            application/json: {}
  /picklist/options:
    get:
      summary: Get picklist options
      operationId: getPicklist
      description: Get all picklist options
      tags:
        - Picklist
      responses:
        '200':
          description: picklist
          content:
            application/json: {}
  '/statusmanager/{guid}':
    get:
      summary: Get status log by order guid
      operationId: getStatusLog
      description: Get status log by order guid
      tags:
        - Statusmanager
      parameters:
        - in: path
          name: guid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
        - in: query
          name: pg
          schema:
            $ref: '#/components/schemas/page'
        - in: query
          name: rc
          schema:
            $ref: '#/components/schemas/rowCount'
      responses:
        '200':
          description: status log
          content:
            application/json: {}
  /terminal:
    get:
      summary: Get list of terminals
      operationId: searchTerminals
      description: Get list of terminals
      tags:
        - Terminals
      parameters:
        - in: query
          name: pg
          schema:
            $ref: '#/components/schemas/page'
        - in: query
          name: rc
          schema:
            $ref: '#/components/schemas/rowCount'
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: address
          schema:
            type: string
        - in: query
          name: city
          schema:
            type: string
        - in: query
          name: state
          schema:
            type: string
        - in: query
          name: country
          schema:
            type: string
      responses:
        '200':
          description: terminals
          content:
            application/json: {}
  '/terminal/{terminalGuid}':
    get:
      summary: Get terminal by guid
      operationId: getTerminals
      description: Get terminal by guid
      tags:
        - Terminals
      parameters:
        - in: path
          name: terminalGuid
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: terminal
          content:
            application/json: {}
  '/variables/{name}':
    get:
      summary: Get variable by name
      operationId: getVariable
      description: Get variable by name
      tags:
        - Variable
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
      responses:
        '200':
          description: variable
          content:
            application/json: {}
  /variable:
    post:
      summary: Create variable
      operationId: postVariable
      description: Create variable
      tags:
        - Variable
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: string
              required:
                - name
                - value
      responses:
        '200':
          description: variable
          content:
            application/json: {}
  /pubsub/token:
    get:
      summary: Get pubsub credentials
      operationId: getPubsub
      description: Get pubsub credentials
      tags:
        - Pubsub
      responses:
        '200':
          description: pubsub
          content:
            application/json: {}
  '/loadboard/{jobId}':
    put:
      summary: Post job
      operationId: putLoadboard
      description: Post job
      tags:
        - Loadboard
      parameters:
        - in: path
          name: jobId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                posts:
                  description: List of loadboards to post on
                  type: array
                  items:
                    type: object
                    properties:
                      loadboard:
                        description: Name of the loadboard
                        type: string
                        enum:
                          - SUPERDISPATCH
                          - SHIPCARS
                          - CENTRALDISPATCH
                          - CARDELIVERYNETWORK
                          - TRUCKSTOP
                          - DAT
                      loadboardInstructions:
                        description: Instructions to publish
                        type: string
                        maxLength: 60
                    required:
                      - loadboard
      responses:
        '204':
          description: loadboards
          content:
            application/json: {}
    get:
      summary: Get loadboard by jobId
      operationId: getLoadboard
      description: Get loadboard by jobId
      tags:
        - Loadboard
      parameters:
        - in: path
          name: jobId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: loadboards
          content:
            application/json: {}
    delete:
      summary: Un-post loadboard
      operationId: delete Loadboard
      description: Un-post loadboard
      tags:
        - Loadboard
      parameters:
        - in: path
          name: jobId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                posts:
                  description: List of loadboards to un-post from
                  type: array
                  items:
                    type: object
                    properties:
                      loadboard:
                        description: Name of the loadboard
                        type: string
                        enum:
                          - SUPERDISPATCH
                          - SHIPCARS
                          - CENTRALDISPATCH
                          - CARDELIVERYNETWORK
                          - TRUCKSTOP
                          - DAT
                    required:
                      - loadboard
      responses:
        '204':
          description: loadboards
          content:
            application/json: {}
    post:
      summary: Create job post
      operationId: postLoadboard
      description: Create job post
      tags:
        - Loadboard
      parameters:
        - in: path
          name: jobId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                posts:
                  description: List of loadboard to create
                  type: array
                  items:
                    type: object
                    properties:
                      loadboard:
                        description: Name of the loadboard
                        type: string
                    required:
                      - loadboard
      responses:
        '200':
          description: loadboards
          content:
            application/json: {}
  '/loadboard/{jobId}/dispatch':
    post:
      summary: Dispatch Job
      operationId: postLoadboardDispatch
      description: Dispatch job internally or to loadboard
      tags:
        - Loadboard
      parameters:
        - in: path
          name: jobId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                loadboard:
                  description: loadboard to dispatch to
                  type: string
                  enum:
                    - SUPERDISPATCH
                    - SHIPCARS
                carrier:
                  type: object
                  description: carrier to dispatch to
                  properties:
                    guid:
                      description: guid or salesforce id of carrier
                      type: string
                      example: 5003000000D8cuI or 61bf88c9-ff63-4f8d-a184-0e9e11bb2408
                  required:
                    - guid
                driver:
                  type: object
                  description: driver assigned to transport the load
                  properties:
                    guid:
                      description: guid or salesforce id of driver
                      type: string
                      example: 5003000000D8cuI or 61bf88c9-ff63-4f8d-a184-0e9e11bb2408
                    name:
                      description: name of driver contact
                      type: string
                      example: Brad Marinov
                    email:
                      description: email of driver contact
                      type: string
                      example: bmarinov@rcglogistics.com
                    phoneNumber:
                      description: phone number of driver contact
                      type: string
                      example: (916) 999-1234
                pickup:
                  type: object
                  description: >-
                    the date type and the possible start and end dates of the
                    pickup
                  properties:
                    dateType:
                      $ref: '#/components/schemas/stopDateType'
                    startDate:
                      $ref: '#/components/schemas/dateTime'
                      description: the earliest date time the load can be picked up
                    endDate:
                      $ref: '#/components/schemas/dateTime'
                      description: the latest date time the load can be picked up
                  required:
                    - dateType
                    - startDate
                delivery:
                  type: object
                  description: >-
                    the date type and the possible start and end dates of the
                    pickup
                  properties:
                    dateType:
                      $ref: '#/components/schemas/stopDateType'
                    startDate:
                      $ref: '#/components/schemas/dateTime'
                      description: the earliest date time the load can be delivered
                    endDate:
                      $ref: '#/components/schemas/dateTime'
                      description: the latest date time the load can be delivered
                  required:
                    - dateType
                    - startDate
                paymentTerm:
                  type: number
                  description: payment term id used for paying carrier
                paymentMethod:
                  type: number
                  description: payment method id used for paying carrier
                price:
                  type: number
                  description: >-
                    new amount owed to the carrier for transporting, will evenly
                    split price across all commodities
                  example: 1234.56
              required:
                - carrier
                - driver
                - pickup
                - delivery
                - paymentTerm
                - paymentMethod
      responses:
        '200':
          description: loadboards
          content:
            application/json: {}
    put:
      summary: Undispatch job
      operationId: putLoadboardDispatch
      description: Undispatches a load from a carrier
      tags:
        - Loadboard
      parameters:
        - in: path
          name: jobId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: loadboards
          content:
            application/json: {}
  '/invoice/{invoiceId}':
    get:
      summary: Get invoice by invoiceId
      operationId: getInvoice
      description: Get invoice by invoiceId
      tags:
        - Invoice
      parameters:
        - in: path
          name: invoiceId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: invoice
          content:
            application/json: {}
        '404':
          description: Invoice not found
          content:
            application/json: {}
  /invoice:
    post:
      summary: Create invoice
      operationId: postInvoice
      description: Create invoice
      tags:
        - Invoice
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: List of order guids
              properties:
                orders:
                  type: array
                  items:
                    description: order guid
                    $ref: '#/components/schemas/guid'
                  minItems: 1
              required:
                - orders
      responses:
        '200':
          description: invocies
          content:
            application/json: {}
  /index/order/number:
    get:
      summary: Get next order index number
      operationId: getOrderIndex
      description: Get next order index number
      tags:
        - Index
        - Order
      responses:
        '200':
          description: index
          content:
            application/json: {}
  /index/job/number:
    get:
      summary: Get next job index number
      operationId: getJobIndex
      description: Get next job index number
      tags:
        - Index
        - Job
      parameters:
        - in: query
          name: order
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: job number
          content:
            application/json: {}
  '/expense/{expenseId}':
    get:
      summary: Get expense by guid
      operationId: getExpense
      description: Get expense by guid
      tags:
        - Expense
      parameters:
        - in: path
          name: expenseId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: expense
          content:
            application/json: {}
    patch:
      summary: Update expense
      operationId: patchExpense
      description: Update expense
      tags:
        - Expense
      parameters:
        - in: path
          name: expenseId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/expense'
      responses:
        '200':
          description: expense
          content:
            application/json: {}
  /expense:
    post:
      summary: Create bill
      operationId: postBill
      description: Create bill
      tags:
        - Bill
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: List of order guids
              properties:
                orders:
                  type: array
                  items:
                    description: order guid
                    $ref: '#/components/schemas/guid'
                  minItems: 1
              required:
                - orders
      responses:
        '200':
          description: invocies
          content:
            application/json: {}
    patch:
      summary: Update expense
      operationId: patchExpense
      description: Update expense
      tags:
        - Expense
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/expense'
      responses:
        '200':
          description: expense
          content:
            application/json: {}
  '/bill/{billId}':
    get:
      summary: Get bill by guid
      operationId: getBill
      description: Get bill by guid
      tags:
        - Bill
      parameters:
        - in: path
          name: billId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: Bill
          content:
            application/json: {}
  /bill:
    post:
      summary: Get bill by guid
      operationId: getBill
      description: Get bill by guid
      tags:
        - Bill
      parameters:
        - in: path
          name: billId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: Bill
          content:
            application/json: {}
  '/account/{accountType}':
    get:
      summary: Get account by type
      operationId: getAccountByType
      description: Get account by type
      tags:
        - Account
      parameters:
        - in: path
          name: accountType
          schema:
            $ref: '#/components/schemas/accountType'
          required: true
        - in: query
          name: pg
          schema:
            $ref: '#/components/schemas/page'
        - in: query
          name: rc
          schema:
            $ref: '#/components/schemas/rowCount'
        - in: query
          name: search
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Account
          content:
            application/json: {}
  '/account/{accountType}/{accountId}':
    get:
      summary: Get account by id and type
      operationId: getAccountById
      description: Get account by id and type
      tags:
        - Account
      parameters:
        - in: path
          name: accountType
          schema:
            $ref: '#/components/schemas/accountType'
          required: true
        - in: path
          name: accountId
          schema:
            $ref: '#/components/schemas/guid'
          required: true
      responses:
        '200':
          description: Account
          content:
            application/json: {}
components:
  schemas:
    guid:
      type: string
      format: uuid
    File:
      type: string
      format: binary
    Attachment:
      type: object
      properties:
        type:
          description: 'The type of attachment (i.e. photo, billOfLading, etc)'
          enum:
            - photo
          default: undefined
        visibility:
          type: array
          items:
            type: string
            enum:
              - carrier
              - client
              - internal
            default:
              - internal
          description: 'The visibility of the attachment (i.e. carrier, internal)'
    SFID:
      type: string
      format: id
      pattern: '^(:?[a-zA-Z0-9]{15}|[a-zA-Z0-9]{18})$'
      maxLength: 18
      minLength: 15
    Account:
      type: object
      required:
        - name
      properties:
        guid:
          oneOf:
            - $ref: '#/components/schemas/SFID'
            - type: string
              format: uuid
        name:
          type: string
    email:
      type: string
      format: email
    phoneNumber:
      type: string
      format: phone
    Contact:
      type: object
      required:
        - name
        - phoneNumber
      properties:
        guid:
          $ref: '#/components/schemas/guid'
        name:
          type: string
          minLength: 1
          maxLength: 121
        email:
          $ref: '#/components/schemas/email'
        phoneNumber:
          $ref: '#/components/schemas/phoneNumber'
        mobileNumber:
          $ref: '#/components/schemas/phoneNumber'
    stopType:
      description: >-
        Describes the type of stop, use pickup to indicate that the stop is for
        picking up commodities, use delivery for dropping off commodities.
      type: string
      enum:
        - pickup
        - delivery
    dateTime:
      description: Date with timezone ISO 8601
      type: string
      format: date-time
      example: '2021-08-10T07:59:59.000Z'
    stopDateType:
      type: string
      enum:
        - estimated
        - exactly
        - no later than
        - no earlier than
    zipCode:
      type: string
    latitude:
      description: Number describing the coordinates latitude
      example: 12.5372125
      type: number
    longitude:
      description: Number describing the coordinates longitude
      example: 45.6208283
      type: number
    Terminal:
      type: object
      required:
        - zipCode
      properties:
        guid:
          $ref: '#/components/schemas/guid'
        index:
          description: >-
            A unique arbitrary string that will be used to reference this
            terminal record inside of other objects.
          type: string
        name:
          description: >-
            A non-unique name for this terminal that will be displayed to the
            users.
          type: string
          maxLength: 255
        street1:
          type: string
          maxLength: 64
        state:
          type: string
          maxLength: 100
        city:
          type: string
          maxLength: 64
        country:
          type: string
          maxLength: 64
        zipCode:
          $ref: '#/components/schemas/zipCode'
        latitude:
          $ref: '#/components/schemas/latitude'
        longitude:
          $ref: '#/components/schemas/longitude'
    commodityCategoryType:
      type: string
      enum:
        - vehicle
        - freight
    commodityType:
      type: string
      enum:
        - coupe
        - convertible
        - sedan
        - SUV
        - minivan
        - pickup truck (2 door)
        - pickup truck (4 door)
        - pickup dually
        - motorcycle
        - ATV
        - boat
        - RV
        - trailer (5th wheel)
        - trailer (bumper pull)
        - trailer (gooseneck)
        - cargo van
        - box truck
        - day cab
        - sleeper cab
        - other
        - bulk
        - crushed cars
        - other
    Commodity:
      description: >-
        The real world item(s) that need to be transported between two real
        world locations
      type: object
      required:
        - identifier
        - type
        - category
      properties:
        guid:
          $ref: '#/components/schemas/guid'
        index:
          description: >-
            A unique arbitrary string that will be used to reference this
            commodity record inside of other objects.
          type: string
        identifier:
          type: string
          maxLength: 255
        category:
          $ref: '#/components/schemas/commodityCategoryType'
        type:
          $ref: '#/components/schemas/commodityType'
        description:
          description: A breif description of the commodity.
          type: string
          maxLength: 255
        quantity:
          description: The number of peices of the commodity to be transported.
          type: integer
        length:
          description: The number of feet the commodity is length-wise.
          type: integer
          minimum: 0
        weight:
          description: The number of US pounds the commodity weighs.
          type: integer
          minimum: 0
        extraExternalData:
          description: >-
            Any information about the commodity that is stored in external
            systems. This is a free response json field.
          type: object
        cost:
          description: Only used for EDI
          type: string
          format: currency
    Stop:
      type: object
      required:
        - sequence
        - stopType
        - terminal
        - commodities
      properties:
        guid:
          $ref: '#/components/schemas/guid'
        index:
          description: >-
            A unique arbitrary string that will be used to reference this stop
            record inside of other objects.
          type: string
        sequence:
          type: integer
        stopType:
          $ref: '#/components/schemas/stopType'
        notes:
          description: Used to convey any instructions about the stops.
          type: string
        dateRequestedStart:
          description: >-
            This date is requested by the customer. The earliest date this stop
            should be worked.
          $ref: '#/components/schemas/dateTime'
        dateRequestedEnd:
          description: >-
            This date is requested by the customer. The latest date this stop
            should be worked.
          $ref: '#/components/schemas/dateTime'
        dateRequestedType:
          description: Defines the type of requested date the customer requested.
          $ref: '#/components/schemas/stopDateType'
        dateEstimatedStart:
          description: >-
            This date is submitted by the carrier/vendor. The earliest date this
            stop could be worked.
          $ref: '#/components/schemas/dateTime'
        dateEstimatedEnd:
          description: >-
            This date is submitted by the carrier/vendor. The latest date this
            stop could be worked.
          $ref: '#/components/schemas/dateTime'
        dateEstimatedType:
          description: Defines the type of estimated date the carrier/vendor submitted.
          $ref: '#/components/schemas/stopDateType'
        dateScheduledStart:
          description: >-
            This date is submitted by the dispatcher. The earliest date this
            stop will be worked
          $ref: '#/components/schemas/dateTime'
        dateScheduledEnd:
          description: >-
            This date is submitted by the dispatcher. The latest date this stop
            will be worked
          $ref: '#/components/schemas/dateTime'
        dateScheduledType:
          description: Defined the type of scheduled date the dispatcher submitted.
          $ref: '#/components/schemas/stopDateType'
        primaryContact:
          $ref: '#/components/schemas/Contact'
        alternativeContact:
          $ref: '#/components/schemas/Contact'
        terminal:
          $ref: '#/components/schemas/Terminal'
        commodities:
          type: array
          minLength: 1
          items:
            $ref: '#/components/schemas/Commodity'
    Order:
      type: object
      required:
        - client
        - stops
        - terminals
        - commodities
      properties:
        referenceNumber:
          type: string
          maxLength: 64
        bol:
          type: string
          maxLength: 64
        totalCost:
          description: >-
            Only used for EDI. The total cost of the order. This should match
            the sum of the cost of all of the commodities.
          type: string
          format: currency
        client:
          description: The client/customer that is placing the order.
          $ref: '#/components/schemas/Account'
        consignee:
          description: The party that is responsible for paying for the order.
          $ref: '#/components/schemas/Account'
        clientContact:
          description: The contact information of the client.
          $ref: '#/components/schemas/Contact'
        stops:
          type: array
          items:
            $ref: '#/components/schemas/Stop'
          minLength: 1
        terminals:
          type: array
          items:
            $ref: '#/components/schemas/Terminal'
          minLength: 1
        commodities:
          type: array
          items:
            $ref: '#/components/schemas/Commodity'
    EDI214StopStatus:
      allOf:
        - $ref: '#/components/schemas/EDI214Status'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/edi214StopCodeType'
            reason:
              description: EDI 214 AT702 appointment status reason code
    EDI214Appointment:
      allOf:
        - $ref: '#/components/schemas/EDI214Status'
        - type: object
          required:
            - code
            - type
            - reason
          properties:
            type:
              $ref: '#/components/schemas/edi214Type'
            code:
              $ref: '#/components/schemas/edi214AppointmentCodeType'
            reason:
              description: EDI 214 AT704 appointment status reason code
    edi214Type:
      type: string
      enum:
        - status
        - appointment
    edi214StatusReasonType:
      type: string
      enum:
        - A1
        - A2
        - A3
        - A5
        - A6
        - AA
        - AD
        - AE
        - AF
        - AG
        - AH
        - AI
        - AJ
        - AK
        - AL
        - AM
        - AN
        - AO
        - AP
        - AQ
        - AR
        - AS
        - AT
        - AU
        - AV
        - AW
        - AX
        - AY
        - AZ
        - B1
        - B2
        - B4
        - B5
        - B8
        - B9
        - BB
        - BC
        - BD
        - BE
        - BF
        - BG
        - BH
        - BI
        - BJ
        - BK
        - BL
        - BM
        - BN
        - BO
        - BP
        - BQ
        - BR
        - BS
        - BT
        - C1
        - C2
        - C3
        - C4
        - C5
        - C6
        - C7
        - C8
        - C9
        - CA
        - CB
        - CC
        - D1
        - D2
        - F1
        - F2
        - HB
        - NA
        - NS
        - P1
        - P2
        - P3
        - P4
        - RC
        - S1
        - T1
        - T2
        - T3
        - T4
        - T5
        - T6
        - T7
      minLength: 2
      maxLength: 2
    EDI214Status:
      type: object
      description: Represents the status/appointment update for the load tender
      required:
        - code
        - type
        - reason
      properties:
        type:
          $ref: '#/components/schemas/edi214Type'
        code:
          type: string
          minLength: 2
          maxLength: 2
        reason:
          $ref: '#/components/schemas/edi214StatusReasonType'
    edi214StopCodeType:
      description: EDI 214  AT701 appointment status code
      type: string
      enum:
        - A3
        - A7
        - A9
        - AF
        - AG
        - AH
        - AI
        - AJ
        - AM
        - AN
        - AP
        - AR
        - AV
        - B6
        - BA
        - BC
        - C1
        - CA
        - CD
        - CL
        - CP
        - D1
        - I1
        - J1
        - K1
        - L1
        - OA
        - OO
        - P1
        - PR
        - R1
        - RL
        - S1
        - SD
        - X1
        - X2
        - X3
        - X4
        - X5
        - X6
        - X8
        - XB
    edi214AppointmentCodeType:
      description: EDI 214  AT703 appointment status code
      type: string
      enum:
        - AA
        - AB
        - AC
        - ED
        - EP
        - LD
        - LP
        - X9
        - XA
    ediActionType:
      type: string
      enum:
        - accept
        - decline
    guidObject:
      type: object
      properties:
        guid:
          $ref: '#/components/schemas/guid'
    inspectionType:
      type: string
      enum:
        - standard
        - advanced
    jobCategoryType:
      type: string
      enum:
        - transport
        - service
    jobType:
      type: string
      enum:
        - transport
        - locksmith
        - unloading
        - loading
        - repair
        - diagnostics
        - dry run
    stringNullable:
      type: string
      nullable: true
    terminalLocationType:
      type: string
      enum:
        - dealer
        - private
        - auction
        - repo yard
        - port
        - business
    numberNullable:
      type: number
      nullable: true
    page:
      description: 'For pagination purposes, page to return'
      type: integer
      default: 0
    rowCount:
      description: 'For pagination purposes, number of entries per page'
      type: integer
      default: 25
    date:
      description: Date as YYYY-MM-DD
      type: string
      format: date
      example: '2021-12-31'
    expense:
      type: object
      properties:
        notes:
          description: Optional notes
          type: string
        amount:
          description: New expense amount
          type: number
        itemId:
          description: New item id
          type: number
        commodityGuid:
          description: New commodity guid
          type: string
          format: uuid
        guid:
          $ref: '#/components/schemas/guid'
      required:
        - guid
    accountType:
      type: string
      enum:
        - client
        - carrier
        - referrer
        - employee
        - dispatcher
